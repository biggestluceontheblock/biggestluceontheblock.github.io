{"version":3,"sources":["intl/shapes.js","components/ui/Headline/index.js","components/ui/Paragraph/index.js","action-creators/eventsReducer/resetValues.js","components/ui/RoundBtn/index.js","components/ui/GreyParagraph/index.js","action-creators/eventsReducer/updateDate.js","action-creators/roomsReducer/triggerSelected.js","action-creators/eventsReducer/resetRoom.js","components/ui/GreyBtn/index.js","db/queries/deleteLocalStorageEvent.js","components/ui/ParticipatorCard/index.js","action-creators/eventsReducer/removeUser.js","action-creators/dropdownReducer/updateFreeUsers.js","action-creators/errorReducer/checkForParticipantsError.js","action-creators/errorReducer/checkForCapacityError.js","components/connected/Participators/index.js","action-creators/dropdownReducer/setFocused.js","components/ui/Input/index.js","action-creators/dropdownReducer/changeIndex.js","action-creators/dropdownReducer/onInputValueChange.js","action-creators/eventsReducer/addUser.js","components/connected/AutoCompleteInput/index.js","components/ui/DropdownOption/index.js","action-creators/dropdownReducer/getScrollbar.js","components/connected/AutoCompleteMenu/index.js","components/connected/AutoComplete/index.js","components/ui/ErrorText/index.js","components/connected/HandleErrors/index.js","components/HOC/addLabel/index.js","components/connected/Dropdown/index.js","components/ui/LargeHeadline/index.js","action-creators/dateReducer/changeValue.js","components/connected/DateSetterInput/index.js","components/connected/TimeInput/index.js","action-creators/eventsReducer/hoursActions/updateTime.js","action-creators/eventsReducer/hoursActions/resetTime.js","utils/addZeroToTime.js","action-creators/eventsReducer/hoursActions/increaseTime.js","action-creators/eventsReducer/hoursActions/decreaseTime.js","action-creators/errorReducer/checkForTimeError.js","action-creators/errorReducer/checkForLimitError.js","components/connected/TimeSetter/index.js","components/connected/DateAndTime/index.js","components/ui/RoomCard/index.js","action-creators/eventsReducer/setRoom.js","action-creators/errorReducer/checkForRoomError.js","components/connected/RoomCards/index.js","db/queries/addLocalStorageEvent.js","action-creators/eventsReducer/createEvent.js","db/queries/updateLocalStorageEvent.js","action-creators/eventsReducer/editEvent.js","action-creators/errorReducer/showAllErrors.js","db/queries/addUserBusyTime.js","action-creators/usersReducer/updateUserBusyTime.js","components/connected/BottomBtns/index.js","components/ui/DeleteBtn/index.js","action-creators/eventsReducer/setEventName.js","action-creators/errorReducer/checkForNameError.js","components/connected/EventNameSetter/index.js","components/ui/CloseBtn/index.js","components/connected/Meeting/index.js"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","userShape","PropTypes","shape","login","string","isRequired","avatarUrl","homeFloor","number","roomShape","arrayOf","name","floor","maxVisitors","selected","bool","dateShape","startingDate","startingMonth","timeShape","startingHours","endingHours","startingMinutes","endingMinutes","eventShape","users","room","date","time","id","rearrangedRoomShape","rooms","objectOf","Headline","_ref","className","children","otherProps","Object","C_Projects_peregovorki_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","concat","Paragraph","_consts_eventsReducer__WEBPACK_IMPORTED_MODULE_0__","resetValues","type","RESET_VALUES","RoundBtn","defaultProps","GreyParagraph","updateDate","month","UPDATE_DATE","_consts_roomsReducer__WEBPACK_IMPORTED_MODULE_0__","triggerSelected","TRIGGER_ROOM","resetRoom","RESET_ROOM","GreyBtn","_getLocalStorageItems__WEBPACK_IMPORTED_MODULE_0__","deleteLocalstorageEvent","getLocalStorageItems","then","currentEvents","updatedEvents","filter","event","localStorage","setItem","JSON","stringify","injectIntl","removeUser","label","formatMessage","intl","react_default","onClick","aria-label","src","alt","lib_default","REMOVE_USER","updateFreeUsers","addedUsers","currentTime","currentDate","editing","freeUsers","user","some","addedUser","busyTime","length","every","isDateTheSame","isUserFree","UPDATE_FREE_USERS","payload","checkForParticipantsError","usersNumber","PARTICIPANTS_ERROR","isError","checkForNameError","visitors","CAPACITY_ERROR","Participators","renderParticipators","_this$props","_this","props","participators","map","ui_ParticipatorCard","key","_this$props2","this","_this$props3","roomIsSelected","checkForCapacityError","Component","mapDispatchToProps","connect","state","usersReducer","eventsReducer","currentEvent","pageReducer","editEventModalOpen","setFocused","focused","SET_FOCUSED","Input","forwardRef","ref","objectWithoutProperties","propTypes","changeIndex","newIndex","CHANGE_INDEX","onInputValueChange","newValue","CHANGE_INPUT_VALUE","addUser","ADD_USER","AutoCompleteInput","resetIndex","handleEnter","foundUsers","highlightedIndex","handleArrowUp","scrollbar","scrollTop","scrollToBottom","handleArrowDown","scrollToTop","listenToKeypresses","e","preventDefault","target","blur","onChange","value","_this$props4","placeholder","activeId","inputValue","isAllErrorsShown","ui_Input","onKeyDown","aria-autocomplete","aria-activedescendant","onFocus","dropdownReducer","errorReducer","DropdownOption","avatarSrc","highlighted","getScrollbar","scrollbarNode","GET_SCROLLBAR","AutoCompleteMenu","renderItems","index","isHighlighted","ui_DropdownOption","scrollbarTrackVertical","style","trackStyles","noScrollbar","display","height","backgroundColor","width","right","top","boxSizing","paddingBottom","objectSpread","scrollbarThumb","_ref2","thumbStyles","borderRadius","marginTop","marginLeft","scrollbars","_this2","aria-selected","react_custom_scrollbars_lib_default","autoHeight","autoHeightMax","renderThumbVertical","renderTrackVertical","hideTracksWhenNotNeeded","s","AutoComplete","findUsers","toLowerCase","includes","trim","handleClickOutside","role","aria-expanded","aria-haspopup","connected_AutoCompleteInput","connected_AutoCompleteMenu","onClickOutside","ErrorText","message","react","ui_ErrorText","addLabel","AddLabel","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","enableUniqueIds","assertThisInitialized","inherits","createClass","htmlFor","nextUniqueId","lastUniqueId","React","componentName","getDisplayName","displayName","parti—ÅipantsError","capacityError","roomsReducer","participantsErrorText","capacityErrorText","HandleErrors","connected_AutoComplete","connected_Participators","LargeHeadline","changeValue","CHANGE_VALUE","UpgradedInput","focus","input","current","createRef","DateSetterInput","now","Date","modifiersStyles","highlightedDate","color","day","_this2$props","monthsValue","getDate","getMonth","locale","months","daysShort","labels","firstDay","modifiers","getFullYear","DayPickerInput_default","component","dayPickerProps","onDayClick","weekdaysShort","firstDayOfWeek","disabledDays","before","fromMonth","inputProps","dateReducer","TimeInput","triggerFocus","setState","prevState","handleKeyDown","increase","decrease","focusInput","currentTarget","select","hours","minutes","onHoursChange","onMinutesChange","timeError","limitError","increaseHours","increaseMinutes","decreaseHours","decreaseMinutes","onBlur","updateTime","subject","resetTime","addZeroToTime","toString","increaseTime","timeStr","lowBorder","highBorder","step","Number","decreaseTime","checkForTimeError","_allFieldsToNumber","obj","newObj","keys","forEach","allFieldsToNumber","TIME_ERROR","checkForLimitError","lowerLimit","LIMIT_ERROR","TimeSetter","onChangeTime","maximumValue","isNaN","startLabel","endLabel","connected_TimeInput","UPDATE_STARTING_HOURS","UPDATE_STARTING_MINUTES","UPDATE_ENDING_HOURS","UPDATE_ENDING_MINUTES","DateAndTime","containerStyles","dateLabel","connected_DateSetterInput","connected_TimeSetter","freeTime","roomName","floorNumber","onCardSelect","onCardDeselect","roomInfo","setRoom","SET_ROOM","checkForRoomError","ROOM_ERROR","RoomCards","getThisRoomEventsTime","currentEventId","events","elem","sortEventsByTime","pivot","Math","random","less","greater","toConsumableArray","getCondition","hours1","hours2","minutes1","minutes2","lessOrGreaterSign","Error","getFreeTime","currentEventTime","openTime","closeTime","thisRoomEvents","sortedTimeArr","i","renderSelectedRoom","selectedRoom","find","ui_RoomCard","stopPropagation","getRoomsToRender","currentEventUsers","neededRooms","floors","compared","equalToCompared","sortRooms","sortedFloors","sort","highestOccurence","count","newCount","neededFloor","renderRooms","_this$props5","roomsToRender","overallRooms","_this$props6","_this$props7","roomError","selectedHeadline","unselectedHeadline","errorMessage","addLocalStorageEvent","newEvent","createEvent","dispatch","ADD_EVENT","createEventActionCreator","triggerModal","TRIGGER_SUCCESS_MODAL","updateLocalStorageEvent","Promise","res","deleteLocalStorageEvent","editEvent","updatedEvent","EDIT_EVENT","editEventActionCreator","showAllErrors","SHOW_ERRORS","addUserBusyTime","updatedUsers","updatedUser","newUsers","updateUserBusyTime","UPDATE_USER_BUSY_TIME","updateUserBusyTimeActionCreator","BottomBtns","checkForErrors","nameError","handleCreate","TRIGGER_CREATE_MODAL","handleEdit","TRIGGER_EDIT_MODAL","onCancel","onDelete","edit","cancelBtnText","deleteBtnText","saveBtnText","createBtnText","SubmitBtn","text","DeleteBtn","mobileDeleteBtnStyles","textAlign","fontFamily","fontWeight","fontSize","cursor","border","transition","outline",":focus,:active","setEventName","CHANGE_EVENT_NAME","NAME_ERROR","EventNameSetter","handleChange","eventName","errorText","Meeting","closeModal","handleDelete","TRIGGER_DELETE_MODAL","title","nameSetterPlaceholder","nameSetterLabel","dropdownPlaceholder","dropdownLabel","react_focus_trap_default","ui_LargeHeadline","connected_EventNameSetter","connected_DateAndTime","CloseBtn","connected_Dropdown","connected_RoomCards","ui_DeleteBtn_DeleteBtn","connected_BottomBtns"],"mappings":"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","file":"static/js/2.e8a03f09.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const userShape = PropTypes.shape({\r\n  login: PropTypes.string.isRequired,\r\n  avatarUrl: PropTypes.string.isRequired,\r\n  homeFloor: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const usersShape = PropTypes.arrayOf(userShape);\r\n\r\nexport const roomShape = PropTypes.shape({\r\n  name: PropTypes.string,\r\n  floor: PropTypes.number,\r\n  maxVisitors: PropTypes.number,\r\n  selected: PropTypes.bool,\r\n});\r\n\r\nexport const roomsShape = PropTypes.arrayOf(roomShape);\r\n\r\nexport const dateShape = PropTypes.shape({\r\n  startingDate: PropTypes.number.isRequired,\r\n  startingMonth: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const timeShape = PropTypes.shape({\r\n  startingHours: PropTypes.string.isRequired,\r\n  endingHours: PropTypes.string.isRequired,\r\n  startingMinutes: PropTypes.string.isRequired,\r\n  endingMinutes: PropTypes.string.isRequired,\r\n});\r\n\r\nexport const eventShape = PropTypes.shape({\r\n  name: PropTypes.string.isRequired,\r\n  users: PropTypes.arrayOf(userShape).isRequired,\r\n  room: roomShape.isRequired,\r\n  date: dateShape.isRequired,\r\n  time: timeShape.isRequired,\r\n  id: PropTypes.string,\r\n});\r\n\r\nexport const eventsShape = PropTypes.arrayOf(eventShape);\r\n\r\n\r\nexport const timeStripeArrayShape = PropTypes.arrayOf(PropTypes.number);\r\n\r\nexport const rearrangedRoomShape = PropTypes.shape({\r\n  floor: PropTypes.number.isRequired,\r\n  rooms: PropTypes.arrayOf(roomShape),\r\n});\r\n\r\nexport const rearrangedRoomsShape = PropTypes.arrayOf(rearrangedRoomShape);\r\n\r\nexport const workingTimeShape = PropTypes.objectOf(PropTypes.string);\n","import React from 'react';\nimport './Headline.scss';\n\nconst Headline = ({ className, children, ...otherProps }) => (\n  <h2 className={`headline ${className}`} {...otherProps}>{children}</h2>\n);\n\nexport default Headline;\n","import React from 'react';\nimport './Paragraph.scss';\n\nconst Paragraph = ({ className, children, ...otherProps }) => (\n  <p className={`paragraph ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default Paragraph;\n","import { RESET_VALUES } from '../../consts/eventsReducer';\n\nconst resetValues = () => ({\n  type: RESET_VALUES,\n});\n\nexport default resetValues;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RoundBtn.scss';\n\nconst RoundBtn = ({ className, children, ...otherProps }) => (\n  <button className={`round-btn ${className}`} {...otherProps}>{children}</button>\n);\n\nRoundBtn.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]).isRequired,\n  className: PropTypes.string,\n};\n\nRoundBtn.defaultProps = {\n  className: '',\n};\n\nexport default RoundBtn;\n","import React from 'react';\nimport './GreyParagraph.scss';\n\nconst GreyParagraph = ({ className, children, ...otherProps }) => (\n  <p className={`grey-paragraph ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default GreyParagraph;\n","import { UPDATE_DATE } from '../../consts/eventsReducer';\n\nconst updateDate = (month, date) => ({\n  type: UPDATE_DATE,\n  month,\n  date,\n});\n\nexport default updateDate;\n","import { TRIGGER_ROOM } from '../../consts/roomsReducer';\n\nconst triggerSelected = id => ({\n  type: TRIGGER_ROOM,\n  id,\n});\n\nexport default triggerSelected;\n","import { RESET_ROOM } from '../../consts/eventsReducer';\n\nconst resetRoom = () => ({\n  type: RESET_ROOM,\n});\n\nexport default resetRoom;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GreyBtn.scss';\n\nconst GreyBtn = ({ children, className, ...otherProps }) => (\n  <button className={`grey-btn ${className}`} {...otherProps}>{children}</button>\n);\n\nGreyBtn.propTypes = {\n  children: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nGreyBtn.defaultProps = {\n  className: '',\n};\n\nexport default GreyBtn;\n","import getLocalStorageItems from './getLocalStorageItems';\r\n\r\nconst deleteLocalstorageEvent = (id) => {\r\n  getLocalStorageItems('events')\r\n    .then((currentEvents) => {\r\n      const updatedEvents = currentEvents.filter(event => event.id !== id);\r\n\r\n      localStorage.setItem('events', JSON.stringify(updatedEvents));\r\n    });\r\n};\r\n\r\nexport default deleteLocalstorageEvent;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Paragraph from '../Paragraph';\nimport './ParticipatorCard.scss';\n\nconst ParticipatorCard = ({\n  avatarUrl,\n  name,\n  removeUser,\n  intl: {\n    formatMessage,\n  },\n}) => {\n  const label = formatMessage({ id: 'participatorCard.label' }, { name });\n\n  return (\n    <button\n      className=\"participator-card\"\n      onClick={removeUser}\n      aria-label={label}\n    >\n      <div className=\"particitapor-card__image-container\">\n        <img className=\"participator-card__avatar\" src={avatarUrl} alt={`${name}'s avatar`} />\n      </div>\n      <Paragraph className=\"participator-card__paragraph\">{name}</Paragraph>\n      <div className=\"participator-card__close-icon\">\n        <FontAwesome\n          name=\"times\"\n        />\n      </div>\n    </button>\n  );\n};\n\n\nParticipatorCard.propTypes = {\n  intl: intlShape.isRequired,\n  avatarUrl: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  removeUser: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(ParticipatorCard);\n","import { REMOVE_USER } from '../../consts/eventsReducer';\n\nconst removeUser = id => ({\n  type: REMOVE_USER,\n  id,\n});\n\nexport default removeUser;\n","import { UPDATE_FREE_USERS } from '../../consts/dropdownReducer';\r\n\r\nconst updateFreeUsers = (users, addedUsers, currentTime, currentDate, editing) => {\r\n  const notAddedUsers = users.filter(user => !addedUsers.some(addedUser => (\r\n    user.id === addedUser.id\r\n  )));\r\n\r\n  const freeUsers = notAddedUsers.filter((user) => {\r\n    if (user.busyTime.length > 0) {\r\n      const isUserFree = ({\r\n        startingHours,\r\n        startingMinutes,\r\n        endingHours,\r\n        endingMinutes,\r\n      }) => (\r\n        (endingHours <= currentTime.startingHours\r\n        && endingMinutes <= currentTime.startingMinutes)\r\n        || (startingHours >= currentTime.endingHours\r\n        && startingMinutes >= currentTime.endingMinutes)\r\n      );\r\n\r\n      return user.busyTime.every((time) => {\r\n        const isDateTheSame = time.startingDate === currentDate.startingDate\r\n        && time.startingMonth === currentDate.startingMonth;\r\n\r\n        if (editing || !isDateTheSame) {\r\n          return true;\r\n          // It should let user re-select selected participators while editing\r\n        }\r\n\r\n        return isUserFree(time);\r\n      });\r\n    }\r\n\r\n    return true; // User is not added in any event\r\n  });\r\n\r\n  return {\r\n    type: UPDATE_FREE_USERS,\r\n    payload: freeUsers,\r\n  };\r\n};\r\n\r\nexport default updateFreeUsers;\r\n","import { PARTICIPANTS_ERROR } from '../../consts/errorReducer';\n\nconst checkForParticipantsError = usersNumber => ({\n  type: PARTICIPANTS_ERROR,\n  isError: usersNumber < 2,\n});\n\nexport default checkForParticipantsError;\n","import { CAPACITY_ERROR } from '../../consts/errorReducer';\n\nconst checkForNameError = (visitors, maxVisitors) => ({\n  type: CAPACITY_ERROR,\n  isError: visitors > maxVisitors,\n});\n\nexport default checkForNameError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ParticipatorCard from '../../ui/ParticipatorCard';\nimport removeUser from '../../../action-creators/eventsReducer/removeUser';\nimport updateFreeUsers from '../../../action-creators/dropdownReducer/updateFreeUsers';\nimport checkForParticipantsError from '../../../action-creators/errorReducer/checkForParticipantsError';\nimport checkForCapacityError from '../../../action-creators/errorReducer/checkForCapacityError';\nimport { usersShape, timeShape, dateShape } from '../../../intl/shapes';\n\nclass Participators extends Component {\n  static propTypes = {\n    users: usersShape.isRequired,\n    participators: usersShape.isRequired,\n    removeUser: PropTypes.func.isRequired,\n    updateFreeUsers: PropTypes.func.isRequired,\n    checkForParticipantsError: PropTypes.func.isRequired,\n    checkForCapacityError: PropTypes.func.isRequired,\n    roomIsSelected: PropTypes.bool.isRequired,\n    maxVisitors: PropTypes.number,\n    currentTime: timeShape,\n    editing: PropTypes.bool.isRequired,\n    currentDate: dateShape,\n  }\n\n  componentDidMount() {\n    const {\n      updateFreeUsers, users, participators, currentTime, editing, currentDate,\n    } = this.props;\n\n    updateFreeUsers(users, participators, currentTime, currentDate, editing);\n  }\n\n  componentDidUpdate() {\n    const {\n      checkForParticipantsError,\n      roomIsSelected,\n      checkForCapacityError,\n      participators,\n      maxVisitors,\n      updateFreeUsers,\n      users,\n      currentTime,\n      editing,\n      currentDate,\n    } = this.props;\n\n    updateFreeUsers(users, participators, currentTime, currentDate, editing);\n\n    checkForParticipantsError(participators.length);\n\n    if (roomIsSelected) {\n      checkForCapacityError(participators.length, maxVisitors);\n    }\n  }\n\n  renderParticipators = () => {\n    const { participators, removeUser } = this.props;\n\n    return participators.map(user => (\n      <ParticipatorCard\n        key={user.id}\n        name={user.login}\n        avatarUrl={user.avatarUrl}\n        removeUser={() => {\n          removeUser(user.id);\n        }}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderParticipators()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.usersReducer.users,\n  participators: state.eventsReducer.currentEvent.users,\n  currentTime: state.eventsReducer.currentEvent.time,\n  currentDate: state.eventsReducer.currentEvent.date,\n  editing: state.pageReducer.editEventModalOpen,\n});\n\nconst mapDispatchToProps = {\n  updateFreeUsers,\n  removeUser,\n  checkForParticipantsError,\n  checkForCapacityError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Participators);\n","import { SET_FOCUSED } from '../../consts/dropdownReducer';\r\n\r\nconst setFocused = focused => ({\r\n  type: SET_FOCUSED,\r\n  payload: focused,\r\n});\r\n\r\nexport default setFocused;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './Index.scss';\n\n// DateSetterComponent makes use of ref with this component\n\nconst Input = forwardRef(({ isError, className, ...otherProps }, ref) => (\n  <input\n    type=\"text\"\n    className={`input ${isError ? 'input--error' : ''} ${className}`}\n    ref={ref}\n    {...otherProps}\n  />\n));\n\nInput.propTypes = {\n  isError: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nInput.defaultProps = {\n  isError: false,\n  className: '',\n};\n\nexport default Input;\n","import { CHANGE_INDEX } from '../../consts/dropdownReducer';\r\n\r\nconst changeIndex = newIndex => ({\r\n  type: CHANGE_INDEX,\r\n  payload: newIndex,\r\n});\r\n\r\nexport default changeIndex;\n","import { CHANGE_INPUT_VALUE } from '../../consts/dropdownReducer';\r\n\r\nconst onInputValueChange = newValue => ({\r\n  type: CHANGE_INPUT_VALUE,\r\n  payload: newValue,\r\n});\r\n\r\nexport default onInputValueChange;\n","import { ADD_USER } from '../../consts/eventsReducer';\n\nconst addUser = user => ({\n  type: ADD_USER,\n  payload: user,\n});\n\nexport default addUser;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../ui/Input';\r\nimport setFocused from '../../../action-creators/dropdownReducer/setFocused';\r\nimport changeIndex from '../../../action-creators/dropdownReducer/changeIndex';\r\nimport onInputValueChange from '../../../action-creators/dropdownReducer/onInputValueChange';\r\nimport { usersShape } from '../../../intl/shapes';\r\nimport addUser from '../../../action-creators/eventsReducer/addUser';\r\n\r\nclass AutoCompleteInput extends Component {\r\n  static propTypes = {\r\n    placeholder: PropTypes.string,\r\n    activeId: PropTypes.string.isRequired,\r\n    isError: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number, // 1 or 0\r\n    ]).isRequired,\r\n    setFocused: PropTypes.func.isRequired,\r\n    highlightedIndex: PropTypes.number.isRequired,\r\n    scrollbar: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\r\n    addUser: PropTypes.func.isRequired,\r\n    onInputValueChange: PropTypes.func.isRequired,\r\n    inputValue: PropTypes.string.isRequired,\r\n    changeIndex: PropTypes.func.isRequired,\r\n    isAllErrorsShown: PropTypes.bool.isRequired,\r\n    foundUsers: usersShape.isRequired,\r\n  }\r\n\r\n  static defaultProps = {\r\n    placeholder: '',\r\n  }\r\n\r\n  resetIndex = () => {\r\n    const { changeIndex } = this.props;\r\n\r\n    changeIndex(0);\r\n  }\r\n\r\n  handleEnter = () => {\r\n    const { addUser, foundUsers, highlightedIndex } = this.props;\r\n\r\n    if (foundUsers.length !== 0) {\r\n      addUser(foundUsers[highlightedIndex]);\r\n\r\n      if (foundUsers.length - 1 === highlightedIndex) {\r\n        this.resetIndex();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleArrowUp = () => {\r\n    const {\r\n      foundUsers, highlightedIndex, changeIndex, scrollbar,\r\n    } = this.props;\r\n\r\n    if (highlightedIndex > 0) {\r\n      changeIndex(highlightedIndex - 1);\r\n      scrollbar.scrollTop(35 * (highlightedIndex - 1));\r\n    } else {\r\n      changeIndex(foundUsers.length - 1);\r\n      scrollbar.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  handleArrowDown = () => {\r\n    const {\r\n      foundUsers, highlightedIndex, changeIndex, scrollbar,\r\n    } = this.props;\r\n\r\n    if (highlightedIndex <= foundUsers.length - 2) {\r\n      changeIndex(highlightedIndex + 1);\r\n      scrollbar.scrollTop(35 * highlightedIndex);\r\n    } else {\r\n      this.resetIndex();\r\n      scrollbar.scrollToTop();\r\n    }\r\n  }\r\n\r\n  listenToKeypresses = (e) => {\r\n    const { setFocused } = this.props;\r\n\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        e.preventDefault();\r\n        this.handleEnter();\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n        e.preventDefault();\r\n        this.handleArrowUp();\r\n        break;\r\n\r\n      case 'ArrowDown':\r\n        e.preventDefault();\r\n        this.handleArrowDown();\r\n        break;\r\n\r\n      case 'Escape':\r\n        e.preventDefault();\r\n        e.target.blur();\r\n        setFocused();\r\n        break;\r\n\r\n      case 'Tab':\r\n        setFocused();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { onInputValueChange } = this.props;\r\n\r\n    this.resetIndex();\r\n    e.preventDefault();\r\n    onInputValueChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      placeholder, activeId, isError, setFocused, inputValue, isAllErrorsShown,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Input\r\n        onChange={this.onChange}\r\n        value={inputValue}\r\n        onKeyDown={this.listenToKeypresses}\r\n        placeholder={placeholder}\r\n        aria-autocomplete=\"both\"\r\n        aria-activedescendant={activeId}\r\n        isError={isError && isAllErrorsShown}\r\n        onFocus={() => setFocused(true)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  highlightedIndex: state.dropdownReducer.highlightedIndex,\r\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\r\n  inputValue: state.dropdownReducer.inputValue,\r\n  activeId: state.dropdownReducer.activeId,\r\n  scrollbar: state.dropdownReducer.scrollbar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setFocused,\r\n  changeIndex,\r\n  onInputValueChange,\r\n  addUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoCompleteInput);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paragarph from '../Paragraph';\nimport GreyParagraph from '../GreyParagraph';\nimport './DropdownOption.scss';\n\nconst DropdownOption = ({ name, avatarSrc, homeFloor, highlighted, id, onClick }) => (\n  <div\n    className={`dropdown-option ${highlighted ? 'dropdown-option__active' : ''}`}\n    id={id}\n    onClick={onClick}\n  >\n    <div className=\"dropdown-option__image-container\">\n      <img className=\"dropdown-option__avatar\" src={avatarSrc} alt={`${name}`} />\n    </div>\n    <Paragarph\n      className={`dropdown-option__paragraph ${highlighted ? 'dropdown-option__highlighted' : ''}`}\n    >\n      {name}\n      {' '}\n      ¬∑&#160;\n    </Paragarph>\n\n    <GreyParagraph\n      className={`dropdown-option__grey-paragraph ${highlighted ? 'dropdown-option__highlighted' : ''}`}\n    >\n      <span className=\"dropdown-option__floor-number\">{homeFloor}</span>\n      {' '}\n      —ç—Ç–∞–∂\n    </GreyParagraph>\n  </div>\n);\n\nDropdownOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarSrc: PropTypes.string.isRequired,\n  homeFloor: PropTypes.number.isRequired,\n  highlighted: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  id: PropTypes.string,\n};\n\nDropdownOption.defaultProps = {\n  id: '',\n};\n\nexport default DropdownOption;\n","import { GET_SCROLLBAR } from '../../consts/dropdownReducer';\r\n\r\nconst getScrollbar = scrollbarNode => ({\r\n  type: GET_SCROLLBAR,\r\n  payload: scrollbarNode,\r\n});\r\n\r\nexport default getScrollbar;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Scrollbar from 'react-custom-scrollbars';\r\nimport PropTypes from 'prop-types';\r\nimport DropdownOption from '../../ui/DropdownOption';\r\nimport getScrollbar from '../../../action-creators/dropdownReducer/getScrollbar';\r\nimport './AutoCompleteMenu.scss';\r\nimport addUser from '../../../action-creators/eventsReducer/addUser';\r\nimport { usersShape } from '../../../intl/shapes';\r\n\r\nclass AutoCompleteMenu extends Component {\r\n  static propTypes = {\r\n    addUser: PropTypes.func.isRequired,\r\n    getScrollbar: PropTypes.func.isRequired,\r\n    foundUsers: usersShape.isRequired,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getScrollbar } = this.props;\r\n\r\n    getScrollbar(this.scrollbars);\r\n  }\r\n\r\n  renderItems = () => {\r\n    const { foundUsers, highlightedIndex, addUser, activeId } = this.props;\r\n\r\n    return foundUsers.map((user, index) => {\r\n      const isHighlighted = highlightedIndex === index;\r\n      const onClick = () => addUser(user);\r\n\r\n      return (\r\n        <DropdownOption\r\n          key={user.id}\r\n          name={user.login}\r\n          homeFloor={user.homeFloor}\r\n          avatarSrc={user.avatarUrl}\r\n          highlighted={isHighlighted}\r\n          onClick={onClick}\r\n          id={isHighlighted ? activeId : null}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  scrollbarTrackVertical = ({ style, props }) => {\r\n    const { noScrollbar } = this.props;\r\n\r\n    const trackStyles = !noScrollbar\r\n      ? {\r\n        display: 'inline-block',\r\n        height: '100%',\r\n        backgroundColor: '#ffffff',\r\n        width: '22px',\r\n        right: '0px',\r\n        top: '0px',\r\n        boxSizing: 'border-box',\r\n        paddingBottom: '10px',\r\n      }\r\n      : { display: 'none' };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...style,\r\n          ...trackStyles,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n\r\n  scrollbarThumb = ({ style, props }) => {\r\n    const { noScrollbar } = this.props;\r\n\r\n    const thumbStyles = !noScrollbar\r\n      ? {\r\n        width: '11px',\r\n        backgroundColor: '#d5dfe9',\r\n        borderRadius: '5px',\r\n        marginTop: '5px',\r\n        marginLeft: '5px',\r\n      }\r\n      : { display: 'none' };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...style,\r\n          ...thumbStyles,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"autocomplete__menu\"\r\n        aria-selected=\"true\"\r\n      >\r\n        <Scrollbar\r\n          autoHeight\r\n          autoHeightMax={140}\r\n          renderThumbVertical={this.scrollbarThumb}\r\n          renderTrackVertical={this.scrollbarTrackVertical}\r\n          hideTracksWhenNotNeeded\r\n          ref={(s) => { this.scrollbars = s; }}\r\n        >\r\n          {\r\n            this.renderItems()\r\n          }\r\n        </Scrollbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  activeId: state.dropdownReducer.activeId,\r\n  freeUsers: state.dropdownReducer.freeUsers,\r\n  highlightedIndex: state.dropdownReducer.highlightedIndex,\r\n  inputValue: state.dropdownReducer.inputValue,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getScrollbar,\r\n  addUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoCompleteMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, intlShape } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport onClickOutside from 'react-onclickoutside';\r\nimport setFocused from '../../../action-creators/dropdownReducer/setFocused';\r\nimport Input from '../AutoCompleteInput';\r\nimport Menu from '../AutoCompleteMenu';\r\nimport './AutoComplete.scss';\r\nimport { usersShape } from '../../../intl/shapes';\r\n\r\nclass AutoComplete extends Component {\r\n  static propTypes = {\r\n    intl: intlShape.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    isError: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number, // 1 or 0\r\n    ]).isRequired,\r\n    setFocused: PropTypes.func.isRequired,\r\n    freeUsers: usersShape.isRequired,\r\n    inputValue: PropTypes.string.isRequired,\r\n  }\r\n\r\n  findUsers = () => {\r\n    const { freeUsers, inputValue } = this.props;\r\n    const isItemMatching = (login, value) => login.toLowerCase().includes(\r\n      value.trim().toLowerCase(),\r\n    );\r\n\r\n    return freeUsers.filter(user => isItemMatching(user.login, inputValue));\r\n  }\r\n\r\n  handleClickOutside = () => {\r\n    const { focused, setFocused } = this.props;\r\n\r\n    if (focused) {\r\n      setFocused(false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { focused, intl: { formatMessage }, isError } = this.props;\r\n    const placeholder = formatMessage({ id: 'meeting.dropdown.placeholder' });\r\n    const foundUsers = this.findUsers();\r\n\r\n    return (\r\n      <div\r\n        className=\"autocomplete\"\r\n        role=\"combobox\" // eslint-disable-line jsx-a11y/role-has-required-aria-props\r\n        aria-expanded={focused}\r\n        aria-haspopup=\"listbox\"\r\n      >\r\n        <Input\r\n          focused={focused}\r\n          placeholder={placeholder}\r\n          isError={isError}\r\n          foundUsers={foundUsers}\r\n        />\r\n\r\n        {focused\r\n          && <Menu foundUsers={foundUsers} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  focused: state.dropdownReducer.focused,\r\n  freeUsers: state.dropdownReducer.freeUsers,\r\n  inputValue: state.dropdownReducer.inputValue,\r\n  currentTime: state.eventsReducer.currentEvent.time,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setFocused,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(injectIntl(onClickOutside(AutoComplete)));\r\n","import React from 'react';\nimport './ErrorText.scss';\n\nconst ErrorText = ({ className, children, ...otherProps }) => (\n  <p className={`error-text ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default ErrorText;\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ErrorText from '../../ui/ErrorText';\r\n\r\nconst HandleError = ({ isError, message, isAllErrorsShown }) => (\r\n  <Fragment>\r\n    {isError && isAllErrorsShown\r\n      && (\r\n      <ErrorText>\r\n        {message}\r\n      </ErrorText>\r\n      )\r\n    }\r\n  </Fragment>\r\n);\r\n\r\nHandleError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  isAllErrorsShown: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\r\n});\r\n\r\nexport default connect(mapStateToProps)(HandleError);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { enableUniqueIds } from 'react-html-id';\r\nimport Headline from '../../ui/Headline';\r\nimport getDisplayName from '../getDisplayName';\r\nimport './addLabel.scss';\r\n\r\nconst addLabel = (Component) => {\r\n  class AddLabel extends React.Component {\r\n    static propTypes = {\r\n      className: PropTypes.string,\r\n      label: PropTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n      className: '',\r\n      label: '',\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      enableUniqueIds(this);\r\n    }\r\n\r\n    render() {\r\n      const { className, label, ...otherProps } = this.props;\r\n\r\n      /* eslint-disable jsx-a11y/label-has-for */\r\n\r\n      return (\r\n        <div className={className}>\r\n          <label htmlFor={this.nextUniqueId()}>\r\n            <Headline className=\"label__headline\">{label}</Headline>\r\n          </label>\r\n\r\n          <Component {...otherProps} id={this.lastUniqueId()} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const componentName = getDisplayName(AddLabel);\r\n\r\n  AddLabel.displayName = `AddLabel(${componentName})`;\r\n\r\n  return AddLabel;\r\n};\r\n\r\nexport default addLabel;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Participators from '../Participators';\nimport AutoComplete from '../AutoComplete';\nimport HandleErrors from '../HandleErrors';\nimport addLabel from '../../HOC/addLabel';\n\nconst Dropdown = ({\n  parti—ÅipantsError,\n  capacityError,\n  maxVisitors,\n  intl: { formatMessage },\n  roomIsSelected,\n}) => {\n  const participantsErrorText = formatMessage({ id: 'meeting.dropdown.participantsErrorText' });\n  const capacityErrorText = formatMessage({\n    id: 'meeting.dropdown.capacityErrorText',\n  }, { maxVisitors });\n\n  return (\n    <div>\n      <HandleErrors\n        message={participantsErrorText}\n        isError={parti—ÅipantsError}\n      />\n\n      <HandleErrors\n        message={capacityErrorText}\n        isError={capacityError && roomIsSelected}\n      />\n\n      <AutoComplete\n        isError={capacityError && (roomIsSelected || parti—ÅipantsError)}\n      />\n\n      <Participators\n        maxVisitors={maxVisitors}\n        roomIsSelected={roomIsSelected}\n      />\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  intl: intlShape.isRequired,\n  parti—ÅipantsError: PropTypes.bool.isRequired,\n  capacityError: PropTypes.bool.isRequired,\n  roomIsSelected: PropTypes.bool.isRequired,\n  maxVisitors: PropTypes.number,\n};\n\nconst mapStateToProps = state => ({\n  parti—ÅipantsError: state.errorReducer.parti—ÅipantsError,\n  capacityError: state.errorReducer.capacityError,\n  roomIsSelected: state.roomsReducer.roomIsSelected,\n  maxVisitors: state.eventsReducer.currentEvent.room.maxVisitors,\n});\n\nconst ConnectedComponent = connect(mapStateToProps)(injectIntl(Dropdown));\n\nexport default addLabel(ConnectedComponent);\n","import React from 'react';\nimport './LargeHeadline.scss';\n\nconst LargeHeadline = ({ className, children, ...otherProps }) => (\n  <h1 className={`large-headline ${className}`} {...otherProps}>{children}</h1>\n);\n\nexport default LargeHeadline;\n","import { CHANGE_VALUE } from '../../consts/dateReducer';\r\n\r\nconst changeValue = (month, date) => ({\r\n  type: CHANGE_VALUE,\r\n  month,\r\n  date,\r\n});\r\n\r\nexport default changeValue;\n","import React, { Component, createRef } from 'react';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../../ui/Input';\nimport updateDate from '../../../action-creators/eventsReducer/updateDate';\nimport changeValue from '../../../action-creators/dateReducer/changeValue';\nimport { dateShape } from '../../../intl/shapes';\nimport addLabel from '../../HOC/addLabel';\n\nclass UpgradedInput extends Component {\n  constructor(props) {\n    super(props);\n    this.input = createRef();\n  }\n\n  focus = () => {\n    this.input.current.focus();\n  }\n\n  render() {\n    return <Input ref={this.input} {...this.props} />;\n  }\n}\n\nclass DateSetterInput extends Component {\n  static propTypes = {\n    date: dateShape.isRequired,\n    id: PropTypes.string.isRequired,\n    updateDate: PropTypes.func.isRequired,\n    changeValue: PropTypes.func.isRequired,\n    monthsValue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    locale: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    firstDay: PropTypes.number.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    daysShort: PropTypes.arrayOf(PropTypes.string).isRequired,\n    labels: PropTypes.objectOf(PropTypes.string).isRequired,\n  }\n\n  now = new Date()\n\n  modifiersStyles = {\n    highlightedDate: {\n      color: '#fff',\n      backgroundColor: '#55a8fe',\n      borderRadius: '50%',\n    },\n  }\n\n  updateDate = (day) => {\n    const { monthsValue, updateDate, changeValue } = this.props;\n\n    const date = day.getDate();\n    const month = day.getMonth();\n\n    updateDate(month, date);\n    changeValue(monthsValue[month], date);\n  }\n\n  render() {\n    const {\n      date, id, locale, months, daysShort, labels, firstDay, value,\n    } = this.props;\n\n    const modifiers = {\n      highlightedDate: new Date(this.now.getFullYear(), date.startingMonth, date.startingDate),\n    };\n\n    return (\n      <DayPickerInput\n        component={UpgradedInput}\n        id={id}\n        value={value}\n        dayPickerProps={{\n          locale,\n          months,\n          labels,\n          onDayClick: this.updateDate,\n          weekdaysShort: daysShort,\n          firstDayOfWeek: firstDay,\n          modifiers,\n          modifiersStyles: this.modifiersStyles,\n          disabledDays: [{\n            before: this.now,\n          }],\n          fromMonth: this.now,\n        }}\n        inputProps={{\n          onChange: (e) => {\n            e.target.value = value;\n          },\n          placeholder: '',\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  date: state.eventsReducer.currentEvent.date,\n  locale: state.dateReducer.locale,\n  value: state.dateReducer.value,\n  labels: state.dateReducer.labels,\n  monthsValue: state.dateReducer.monthsValue,\n  months: state.dateReducer.months,\n  daysShort: state.dateReducer.daysShort,\n  firstDay: state.dateReducer.firstDay,\n});\n\nconst mapDispatchToProps = {\n  updateDate,\n  changeValue,\n};\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(DateSetterInput);\n\nexport default addLabel(ConnectedComponent);\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport addLabel from '../../HOC/addLabel';\nimport './TimeInput.scss';\n\nclass TimeInput extends Component {\n  static propTypes = {\n    onHoursChange: PropTypes.func.isRequired,\n    onMinutesChange: PropTypes.func.isRequired,\n    hours: PropTypes.string.isRequired,\n    minutes: PropTypes.string.isRequired,\n    increaseHours: PropTypes.func.isRequired,\n    increaseMinutes: PropTypes.func.isRequired,\n    decreaseHours: PropTypes.func.isRequired,\n    decreaseMinutes: PropTypes.func.isRequired,\n    limitError: PropTypes.bool.isRequired,\n    timeError: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number, // 1 or 0\n    ]).isRequired,\n    isAllErrorsShown: PropTypes.bool.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n    this.hours = createRef();\n    this.minutes = createRef();\n\n    this.state = {\n      focused: false,\n    };\n  }\n\n  triggerFocus = () => {\n    this.setState(prevState => ({\n      focused: !prevState.focused,\n    }));\n  }\n\n  handleKeyDown = (e, increase, decrease) => {\n    switch (e.key) {\n      case 'ArrowUp':\n        increase();\n        break;\n\n      case 'ArrowDown':\n        decrease();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  focusInput = (e) => {\n    this.triggerFocus();\n    e.currentTarget.select();\n  }\n\n  render() {\n    const\n      {\n        onHoursChange,\n        onMinutesChange,\n        hours,\n        minutes,\n        timeError,\n        limitError,\n        isAllErrorsShown,\n        increaseHours,\n        increaseMinutes,\n        decreaseHours,\n        decreaseMinutes,\n      } = this.props;\n\n    const { focused } = this.state;\n    const isError = (timeError || limitError) && isAllErrorsShown;\n\n    return (\n      <div\n        className={`\n          time-input \n          ${focused ? 'time-input--focused' : ''} \n          ${isError ? 'time-input--error' : ''}\n        `}\n      >\n        <input\n          type=\"text\"\n          value={hours}\n          onChange={onHoursChange}\n          className=\"time-input__invisible-input\"\n          onFocus={this.focusInput}\n          onBlur={this.triggerFocus}\n          onKeyDown={(e) => {\n            this.handleKeyDown(e, increaseHours, decreaseHours);\n          }}\n          ref={this.hours}\n        />\n\n        <span className=\"time-input__colon\">:</span>\n\n        <input\n          type=\"text\"\n          value={minutes}\n          onChange={onMinutesChange}\n          className=\"time-input__invisible-input\"\n          onFocus={this.focusInput}\n          onBlur={this.triggerFocus}\n          onKeyDown={(e) => {\n            this.handleKeyDown(e, increaseMinutes, decreaseMinutes);\n          }}\n          ref={this.minutes}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  timeError: state.errorReducer.timeError,\n  limitError: state.errorReducer.limitError,\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\n});\n\nconst ConnectedComponent = connect(mapStateToProps)(TimeInput);\n\nexport default addLabel(ConnectedComponent);\n","const updateTime = (value, subject) => ({\n  type: subject,\n  payload: value,\n});\n\nexport default updateTime;\n","const resetTime = subject => ({\n  type: subject,\n  payload: '',\n});\n\nexport default resetTime;\n","const addZeroToTime = (time) => {\r\n  if (time < 10) {\r\n    return `0${time}`;\r\n  }\r\n\r\n  return time.toString();\r\n};\r\n\r\nexport default addZeroToTime;\r\n","import addZeroToTime from '../../../utils/addZeroToTime';\n\nconst increaseTime = (timeStr, subject, lowBorder, highBorder, step) => {\n  const time = Number(timeStr);\n\n  if (time < highBorder && time >= lowBorder) {\n    return {\n      type: subject,\n      payload: addZeroToTime(time + step),\n    };\n  }\n\n  return {\n    type: subject,\n    payload: addZeroToTime(lowBorder),\n  };\n};\n\nexport default increaseTime;\n","import addZeroToTime from '../../../utils/addZeroToTime';\n\nconst decreaseTime = (timeStr, subject, lowBorder, step) => {\n  const time = Number(timeStr);\n\n  if (time >= lowBorder) {\n    return {\n      type: subject,\n      payload: addZeroToTime(time - step),\n    };\n  }\n\n  return {\n    type: subject,\n    payload: addZeroToTime(time),\n  };\n};\n\nexport default decreaseTime;\n","import { TIME_ERROR } from '../../consts/errorReducer';\n\nconst allFieldsToNumber = (obj) => {\n  const newObj = {};\n\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = Number(obj[key]);\n  });\n\n  return newObj;\n};\n\n\nconst checkForTimeError = (time) => {\n  const {\n    startingHours, endingHours, startingMinutes, endingMinutes,\n  } = allFieldsToNumber(time);\n\n  return {\n    type: TIME_ERROR,\n    isError: startingHours > endingHours || (\n      startingHours === endingHours\n      && startingMinutes >= endingMinutes\n    ),\n  };\n};\n\nexport default checkForTimeError;\n","import { LIMIT_ERROR } from '../../consts/errorReducer';\r\n\r\nconst checkForLimitError = (value, lowerLimit) => ({\r\n  type: LIMIT_ERROR,\r\n  isError: Number(value) < lowerLimit,\r\n});\r\n\r\nexport default checkForLimitError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport TimeInput from '../TimeInput';\nimport updateTime from '../../../action-creators/eventsReducer/hoursActions/updateTime';\nimport resetTime from '../../../action-creators/eventsReducer/hoursActions/resetTime';\nimport increaseTime from '../../../action-creators/eventsReducer/hoursActions/increaseTime';\nimport decreaseTime from '../../../action-creators/eventsReducer/hoursActions/decreaseTime';\nimport checkForTimeError from '../../../action-creators/errorReducer/checkForTimeError';\nimport checkForLimitError from '../../../action-creators/errorReducer/checkForLimitError';\nimport {\n  UPDATE_STARTING_HOURS,\n  UPDATE_ENDING_HOURS,\n  UPDATE_STARTING_MINUTES,\n  UPDATE_ENDING_MINUTES,\n} from '../../../consts/eventsReducer';\nimport { timeShape } from '../../../intl/shapes';\nimport './TimeSetter.scss';\n\nclass TimeSetter extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    time: timeShape.isRequired,\n    increaseTime: PropTypes.func.isRequired,\n    decreaseTime: PropTypes.func.isRequired,\n    updateTime: PropTypes.func.isRequired,\n    resetTime: PropTypes.func.isRequired,\n    checkForTimeError: PropTypes.func.isRequired,\n    checkForLimitError: PropTypes.func.isRequired,\n  }\n\n  componentDidUpdate() {\n    const {\n      checkForTimeError,\n      checkForLimitError,\n      time,\n    } = this.props;\n\n    checkForLimitError(time.startingHours, 8);\n    checkForTimeError(time);\n  }\n\n  onChangeTime = (subject, value, maximumValue) => {\n    const inputValue = Number(value);\n    const { updateTime, resetTime } = this.props;\n    const isValueValid = !Number.isNaN(inputValue);\n\n    if (isValueValid) {\n      if (value.length > 2 || inputValue > maximumValue) {\n        resetTime(subject);\n      } else {\n        updateTime(value, subject);\n      }\n    }\n  }\n\n  render() {\n    const\n      {\n        time,\n        increaseTime,\n        decreaseTime,\n        intl: { formatMessage },\n      } = this.props;\n\n    const startLabel = formatMessage({ id: 'meeting.timeSetter.startLabel' });\n    const endLabel = formatMessage({ id: 'meeting.timeSetter.endLabel' });\n\n    return (\n      <div className=\"time-setter\">\n        <TimeInput\n          label={startLabel}\n          className=\"time-setter__input\"\n          hours={time.startingHours}\n          minutes={time.startingMinutes}\n          increaseHours={() => {\n            increaseTime(time.startingHours, UPDATE_STARTING_HOURS, 8, 22, 1);\n          }}\n          increaseMinutes={() => {\n            increaseTime(time.startingMinutes, UPDATE_STARTING_MINUTES, 0, 55, 5);\n          }}\n          decreaseHours={() => {\n            decreaseTime(time.startingHours, UPDATE_STARTING_HOURS, 9, 1);\n          }}\n          decreaseMinutes={() => {\n            decreaseTime(time.startingMinutes, UPDATE_STARTING_MINUTES, 5, 5);\n          }}\n          onHoursChange={(e) => {\n            this.onChangeTime(UPDATE_STARTING_HOURS, e.target.value, 22);\n          }}\n          onMinutesChange={(e) => {\n            this.onChangeTime(UPDATE_STARTING_MINUTES, e.target.value, 59);\n          }}\n        />\n\n        <span className=\"time-setter__space\">‚ñ¨</span>\n\n        <TimeInput\n          label={endLabel}\n          className=\"time-setter__input\"\n          hours={time.endingHours}\n          minutes={time.endingMinutes}\n          increaseHours={() => {\n            increaseTime(time.endingHours, UPDATE_ENDING_HOURS, 8, 22, 1);\n          }}\n          increaseMinutes={() => {\n            increaseTime(time.endingMinutes, UPDATE_ENDING_MINUTES, 0, 55, 5);\n          }}\n          decreaseHours={() => {\n            decreaseTime(time.endingHours, UPDATE_ENDING_HOURS, 9, 1);\n          }}\n          decreaseMinutes={() => {\n            decreaseTime(time.endingMinutes, UPDATE_ENDING_MINUTES, 5, 5);\n          }}\n          onHoursChange={(e) => {\n            this.onChangeTime(UPDATE_ENDING_HOURS, e.target.value, 22);\n          }}\n          onMinutesChange={(e) => {\n            this.onChangeTime(UPDATE_ENDING_MINUTES, e.target.value, 59);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  time: state.eventsReducer.currentEvent.time,\n});\n\nconst mapDispatchToProps = {\n  updateTime,\n  resetTime,\n  increaseTime,\n  decreaseTime,\n  checkForTimeError,\n  checkForLimitError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(TimeSetter));\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { injectIntl, intlShape } from 'react-intl';\r\nimport DateSetterInput from '../DateSetterInput';\r\nimport TimeSetter from '../TimeSetter';\r\nimport './DateAndTime.scss';\r\n\r\nclass DateAndTime extends Component {\r\n  static propTypes = {\r\n    intl: intlShape.isRequired,\r\n    className: PropTypes.string,\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n  }\r\n\r\n  containerStyles = {\r\n    display: 'flex',\r\n  }\r\n\r\n  render() {\r\n    const { className, intl: { formatMessage } } = this.props;\r\n    const dateLabel = formatMessage({ id: 'meeting.timeSetter.dateLabel' });\r\n\r\n    return (\r\n      <div className={`date-and-time ${className}`}>\r\n        <DateSetterInput\r\n          label={dateLabel}\r\n        />\r\n        <TimeSetter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(DateAndTime);\r\n","import React from 'react';\nimport FontAwesomeIcon from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Headline from '../Headline';\nimport Paragraph from '../Paragraph';\nimport { timeShape } from '../../../intl/shapes';\nimport './RoomCard.scss';\n\nconst RoomCard = ({\n  freeTime,\n  roomName,\n  floorNumber,\n  selected,\n  onCardSelect,\n  onCardDeselect,\n  intl: {\n    formatMessage,\n  },\n}) => {\n  const roomInfo = formatMessage({ id: 'roomCard.roomInfo' }, { roomName, floorNumber });\n\n  return (\n    <button\n      className={`room-card ${selected ? 'room-card--selected' : ''}`}\n      onClick={selected ? onCardDeselect : onCardSelect}\n    >\n      <span className=\"room-card__inner\">\n        <Headline className=\"room-card__headline\">\n          {`${freeTime.startingHours}:${freeTime.startingMinutes}`}\n          ‚Äì\n          {`${freeTime.endingHours}:${freeTime.endingMinutes}`}\n        </Headline>\n\n        <Paragraph className=\"room-card__paragraph\">{roomInfo}</Paragraph>\n\n        {selected\n          && (\n          <div>\n            <FontAwesomeIcon\n              name=\"times\"\n              className=\"room-card__close-icon\"\n            />\n          </div>\n          )\n        }\n      </span>\n    </button>\n  );\n};\n\nRoomCard.propTypes = {\n  intl: intlShape.isRequired,\n  freeTime: timeShape.isRequired,\n  roomName: PropTypes.string.isRequired,\n  floorNumber: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  onCardSelect: PropTypes.func,\n  onCardDeselect: PropTypes.func,\n};\n\nexport default injectIntl(RoomCard);\n","import { SET_ROOM } from '../../consts/eventsReducer';\n\nconst setRoom = room => ({\n  type: SET_ROOM,\n  payload: room,\n});\n\nexport default setRoom;\n","import { ROOM_ERROR } from '../../consts/errorReducer';\n\nconst checkForRoomError = room => ({\n  type: ROOM_ERROR,\n  isError: !room,\n});\n\nexport default checkForRoomError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport RoomCard from '../../ui/RoomCard';\nimport Headline from '../../ui/Headline';\nimport triggerSelected from '../../../action-creators/roomsReducer/triggerSelected';\nimport setRoom from '../../../action-creators/eventsReducer/setRoom';\nimport resetRoom from '../../../action-creators/eventsReducer/resetRoom';\nimport checkForRoomError from '../../../action-creators/errorReducer/checkForRoomError';\nimport {\n  usersShape, eventsShape, roomsShape, timeShape, workingTimeShape, dateShape,\n} from '../../../intl/shapes';\nimport HandleErrors from '../HandleErrors';\nimport './RoomCards.scss';\n\nclass RoomCards extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    rooms: roomsShape.isRequired,\n    events: eventsShape.isRequired,\n    roomIsSelected: PropTypes.bool.isRequired,\n    currentEventTime: timeShape.isRequired,\n    currentEventUsers: usersShape.isRequired,\n    roomError: PropTypes.bool.isRequired,\n    checkForRoomError: PropTypes.func.isRequired,\n    resetRoom: PropTypes.func.isRequired,\n    closeTime: workingTimeShape.isRequired,\n    openTime: workingTimeShape.isRequired,\n    triggerSelected: PropTypes.func.isRequired,\n    editing: PropTypes.bool.isRequired,\n    setRoom: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    date: dateShape.isRequired,\n    currentEventId: PropTypes.string,\n  }\n\n  static defaultProps = {\n    className: '',\n  }\n\n  componentDidUpdate() {\n    const { checkForRoomError, roomIsSelected } = this.props;\n\n    checkForRoomError(roomIsSelected);\n  }\n\n  getThisRoomEventsTime = (room) => {\n    const {\n      editing, currentEventId, date, events,\n    } = this.props;\n\n    const deleteNulls = arr => arr.filter(elem => elem !== null);\n\n    const neededEvents = events.filter(event => event.date.startingDate === date.startingDate\n      && event.date.startingMonth === date.startingMonth);\n\n    const freeTime = neededEvents.map((event) => {\n      if (event.room.id === room.id) {\n        if (editing) {\n          return event.id !== currentEventId ? event.time : null;\n        }\n\n        return event.time;\n      }\n\n      return null;\n    });\n\n    return deleteNulls(freeTime);\n  }\n\n  sortEventsByTime = (events) => {\n    if (events.length < 2) {\n      return events;\n    }\n\n    const pivotPosition = Math.floor(Math.random() * events.length);\n    const pivot = events[pivotPosition];\n    const less = events.filter(elem => (\n      elem.endingHours <= pivot.startingHours && elem.endingMinutes <= pivot.startingMinutes\n    ));\n\n    const greater = events.filter(elem => (\n      elem.startingHours >= pivot.endingHours && elem.startingMinutes >= pivot.endingMinutes\n    ));\n\n    return [...this.sortEventsByTime(less), pivot, ...this.sortEventsByTime(greater)];\n  }\n\n  getCondition = (hours1, hours2, minutes1, minutes2, lessOrGreaterSign) => {\n    if (lessOrGreaterSign === '>') {\n      return hours1 >= hours2 && minutes1 >= minutes2;\n    } if (lessOrGreaterSign === '<') {\n      return hours1 <= hours2 && minutes1 <= minutes2;\n    }\n\n    throw Error(`Dude, ${lessOrGreaterSign} is neither '<' or '>'`);\n  }\n\n  getFreeTime = (room) => {\n    const {\n      currentEventTime,\n      openTime,\n      closeTime,\n    } = this.props;\n\n    const thisRoomEvents = this.getThisRoomEventsTime(room);\n\n    if (thisRoomEvents.length < 1) {\n      return {\n        startingHours: openTime.hours,\n        startingMinutes: openTime.minutes,\n        endingHours: closeTime.hours,\n        endingMinutes: closeTime.minutes,\n      };\n    }\n\n    const sortedTimeArr = this.sortEventsByTime(thisRoomEvents);\n\n    for (let i = 0; i < sortedTimeArr.length; i++) {\n      // If new event fits between two events\n      if (\n        sortedTimeArr[i + 1]\n        && sortedTimeArr[i + 1].startingHours !== sortedTimeArr[i].endingHours\n        && sortedTimeArr[i + 1].startingHours !== sortedTimeArr[i].endingHours\n        && this.getCondition(\n          currentEventTime.startingHours,\n          sortedTimeArr[i].endingHours,\n          currentEventTime.startingMinutes,\n          sortedTimeArr[i].endingMinutes,\n          '>',\n        )\n        && this.getCondition(\n          currentEventTime.endingHours,\n          sortedTimeArr[i + 1].startingHours,\n          currentEventTime.endingMinutes,\n          sortedTimeArr[i + 1].startingMinutes,\n          '<',\n        )\n      ) {\n        return {\n          startingHours: sortedTimeArr[i].endingHours,\n          startingMinutes: sortedTimeArr[i].endingMinutes,\n          endingHours: sortedTimeArr[i + 1].startingHours,\n          endingMinutes: sortedTimeArr[i + 1].startingMinutes,\n        };\n      }\n\n      // If new event fits between opening and the earliest event\n      if (\n        !sortedTimeArr[i - 1]\n          && this.getCondition(\n            currentEventTime.startingHours,\n            sortedTimeArr[i].startingHours,\n            currentEventTime.startingMinutes,\n            sortedTimeArr[i].startingMinutes,\n            '<',\n          )\n          && this.getCondition(\n            currentEventTime.endingHours,\n            sortedTimeArr[i].startingHours,\n            currentEventTime.endingMinutes,\n            sortedTimeArr[i].startingMinutes,\n            '<',\n          )\n      ) {\n        return {\n          startingHours: openTime.hours,\n          startingMinutes: openTime.minutes,\n          endingHours: sortedTimeArr[i].startingHours,\n          endingMinutes: sortedTimeArr[i].startingMinutes,\n        };\n      }\n\n      // If a new event is going to be the last\n      if (\n        !sortedTimeArr[i + 1]\n        && this.getCondition(\n          currentEventTime.startingHours,\n          sortedTimeArr[i].endingHours,\n          currentEventTime.startingMinutes,\n          sortedTimeArr[i].endingMinutes,\n          '>',\n        )\n      ) {\n        return {\n          startingHours: sortedTimeArr[i].endingHours,\n          startingMinutes: sortedTimeArr[i].endingMinutes,\n          endingHours: closeTime.hours,\n          endingMinutes: closeTime.minutes,\n        };\n      }\n    }\n\n    return false;\n  }\n\n  renderSelectedRoom = () => {\n    const { rooms, resetRoom, triggerSelected } = this.props;\n\n    const selectedRoom = rooms.find(room => room.selected);\n\n    const freeTime = this.getFreeTime(selectedRoom);\n\n    return (\n      freeTime ? (\n        <RoomCard\n          key={selectedRoom.id}\n          freeTime={freeTime}\n          roomName={selectedRoom.name}\n          floorNumber={selectedRoom.floor}\n          selected={selectedRoom.selected}\n          onCardDeselect={(e) => {\n            e.stopPropagation();\n            triggerSelected(selectedRoom.id);\n            resetRoom();\n          }}\n        />\n      ) : null\n    );\n  }\n\n  getRoomsToRender = () => {\n    const { rooms, currentEventUsers } = this.props;\n\n    const neededRooms = rooms.filter((room) => {\n      const shouldRoomBeRecommended = () => currentEventUsers.length <= room.maxVisitors;\n\n      return shouldRoomBeRecommended ? room : null;\n    });\n\n    if (currentEventUsers.length > 0) {\n      const floors = currentEventUsers.map(user => user.homeFloor);\n\n      const sortRooms = (rooms, compared) => {\n        if (rooms.length < 2) {\n          return rooms;\n        }\n\n        const equalToCompared = rooms.filter(room => room.floor === compared);\n        const greater = rooms.filter(room => room.floor > compared);\n        const less = rooms.filter(room => room.floor < compared);\n\n        return [...equalToCompared, ...less, ...greater];\n      };\n\n      const neededFloor = () => {\n        const sortedFloors = floors.sort();\n        let highestOccurence = sortedFloors[0];\n        let count = 0;\n        let newCount = 1;\n\n        for (let i = 0; i < sortedFloors.length; i++) {\n          if (sortedFloors[i] === highestOccurence) {\n            count++;\n          } else if (sortedFloors[i] === sortedFloors[i + 1]) {\n            newCount++;\n            if (newCount > count) {\n              highestOccurence = sortedFloors[i];\n              count = newCount;\n              newCount = 1;\n            }\n          }\n        }\n\n        return highestOccurence;\n      };\n\n      return sortRooms(neededRooms, neededFloor(floors));\n    }\n\n    return neededRooms;\n  }\n\n  renderRooms = () => {\n    const { setRoom, triggerSelected } = this.props;\n    const roomsToRender = this.getRoomsToRender();\n    let overallRooms = 0;\n\n    return roomsToRender.map((room) => {\n      const freeTime = this.getFreeTime(room);\n\n      if (freeTime && overallRooms < 5) {\n        overallRooms++;\n        return (\n          <RoomCard\n            key={room.id}\n            freeTime={freeTime}\n            roomName={room.name}\n            floorNumber={room.floor}\n            selected={room.selected}\n            onCardSelect={() => {\n              setRoom(room);\n              triggerSelected(room.id);\n            }}\n          />\n        );\n      }\n\n      return null;\n    });\n  }\n\n  render() {\n    const {\n      roomIsSelected, className, roomError, intl: { formatMessage },\n    } = this.props;\n    const selectedHeadline = formatMessage({ id: 'meeting.roomCards.selectedHeadline' });\n    const unselectedHeadline = formatMessage({ id: 'meeting.roomCards.unselectedHeadline' });\n    const errorMessage = formatMessage({ id: 'meeting.roomCards.errorText' });\n\n    return (\n      <section className={`room-cards ${className}`}>\n        <Headline className=\"room-cards__headline\">\n          {roomIsSelected ? selectedHeadline : unselectedHeadline}\n        </Headline>\n\n        <HandleErrors\n          message={errorMessage}\n          isError={roomError}\n        />\n\n        <div>\n          {roomIsSelected ? this.renderSelectedRoom() : this.renderRooms()}\n        </div>\n      </section>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  rooms: state.roomsReducer.rooms,\n  roomIsSelected: state.roomsReducer.roomIsSelected,\n  roomError: state.errorReducer.roomError,\n  events: state.eventsReducer.events,\n  currentEventTime: state.eventsReducer.currentEvent.time,\n  currentEventUsers: state.eventsReducer.currentEvent.users,\n  closeTime: state.pageReducer.closeTime,\n  openTime: state.pageReducer.openTime,\n  editing: state.pageReducer.editEventModalOpen,\n  currentEventId: state.eventsReducer.currentEvent.id,\n  date: state.eventsReducer.currentEvent.date,\n});\n\nconst mapDispatchToProps = {\n  triggerSelected,\n  setRoom,\n  resetRoom,\n  checkForRoomError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(RoomCards));\n","import getLocalStorageItems from './getLocalStorageItems';\r\n\r\nconst addLocalStorageEvent = (newEvent, id) => {\r\n  getLocalStorageItems('events')\r\n    .then((events) => {\r\n      localStorage.setItem('events', JSON.stringify([...events, { ...newEvent, id }]));\r\n    });\r\n};\r\n\r\nexport default addLocalStorageEvent;\n","import { time } from 'uniqid';\nimport { ADD_EVENT } from '../../consts/eventsReducer';\nimport { TRIGGER_SUCCESS_MODAL } from '../../consts/pageReducer';\nimport addLocalStorageEvent from '../../db/queries/addLocalStorageEvent';\nimport triggerModal from '../pageReducer/triggerModal';\n\nconst createEventActionCreator = id => ({\n  type: ADD_EVENT,\n  id,\n});\n\nconst createEvent = (event) => {\n  const id = time();\n\n  return (dispatch) => {\n    addLocalStorageEvent(event, id);\n    dispatch(createEventActionCreator(id));\n    dispatch(triggerModal(TRIGGER_SUCCESS_MODAL));\n  };\n};\n\nexport default createEvent;\n","import deleteLocalStorageEvent from './deleteLocalStorageEvent';\r\nimport addLocalStorageEvent from './addLocalStorageEvent';\r\n\r\nconst updateLocalStorageEvent = (event, id) => (\r\n  new Promise((res) => {\r\n    res(deleteLocalStorageEvent(id));\r\n  })\r\n    .then(() => {\r\n      addLocalStorageEvent(event, id);\r\n    })\r\n);\r\n\r\nexport default updateLocalStorageEvent;\n","import updateLocalStorageEvent from '../../db/queries/updateLocalStorageEvent';\r\nimport { EDIT_EVENT } from '../../consts/eventsReducer';\r\n\r\nconst editEventActionCreator = (id, updatedEvent) => ({\r\n  type: EDIT_EVENT,\r\n  id,\r\n  updatedEvent,\r\n});\r\n\r\nconst editEvent = (updatedEvent, id) => (dispatch) => {\r\n  updateLocalStorageEvent(updatedEvent, id);\r\n  dispatch(editEventActionCreator(id, updatedEvent));\r\n};\r\n\r\nexport default editEvent;\n","import { SHOW_ERRORS } from '../../consts/errorReducer';\r\n\r\nconst showAllErrors = () => ({\r\n  type: SHOW_ERRORS,\r\n});\r\n\r\nexport default showAllErrors;\n","import getLocalStorageItems from './getLocalStorageItems';\r\n\r\nconst addUserBusyTime = (updatedUsers, busyTime) => {\r\n  getLocalStorageItems('users')\r\n    .then(users => (\r\n      users.map((user) => {\r\n        const shouldUpdate = updatedUsers.some(updatedUser => (\r\n          updatedUser.id === user.id\r\n        ));\r\n\r\n        if (shouldUpdate) {\r\n          return {\r\n            ...user,\r\n            busyTime: [\r\n              ...user.busyTime,\r\n              busyTime,\r\n            ],\r\n          };\r\n        }\r\n\r\n        return user;\r\n      })\r\n    ))\r\n    .then((newUsers) => {\r\n      localStorage.setItem('users', JSON.stringify(newUsers));\r\n    });\r\n};\r\n\r\nexport default addUserBusyTime;\r\n","import { UPDATE_USER_BUSY_TIME } from '../../consts/usersReducer';\r\nimport addUserBusyTime from '../../db/queries/addUserBusyTime';\r\n\r\nconst updateUserBusyTimeActionCreator = (users, busyTime) => ({\r\n  type: UPDATE_USER_BUSY_TIME,\r\n  payload: {\r\n    users,\r\n    busyTime,\r\n  },\r\n});\r\n\r\nconst updateUserBusyTime = (users, busyTime) => (\r\n  (dispatch) => {\r\n    addUserBusyTime(users, busyTime);\r\n    dispatch(updateUserBusyTimeActionCreator(users, busyTime));\r\n  }\r\n);\r\n\r\nexport default updateUserBusyTime;\r\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { connect } from 'react-redux';\nimport GreyBtn from '../../ui/GreyBtn';\nimport SubmitBtn from '../../ui/SubmitBtn';\nimport createEvent from '../../../action-creators/eventsReducer/createEvent';\nimport editEvent from '../../../action-creators/eventsReducer/editEvent';\nimport triggerModal from '../../../action-creators/pageReducer/triggerModal';\nimport {\n  TRIGGER_CREATE_MODAL,\n  TRIGGER_EDIT_MODAL,\n} from '../../../consts/pageReducer';\nimport resetValues from '../../../action-creators/eventsReducer/resetValues';\nimport { eventShape } from '../../../intl/shapes';\nimport showAllErrors from '../../../action-creators/errorReducer/showAllErrors';\nimport updateUserBusyTime from '../../../action-creators/usersReducer/updateUserBusyTime';\nimport './BottomBtns.scss';\n\nclass BottomBtns extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    edit: PropTypes.bool.isRequired,\n    currentEvent: eventShape.isRequired,\n    createEvent: PropTypes.func.isRequired,\n    editEvent: PropTypes.func.isRequired,\n    triggerModal: PropTypes.func.isRequired,\n    nameError: PropTypes.bool.isRequired,\n    parti—ÅipantsError: PropTypes.bool.isRequired,\n    roomError: PropTypes.bool.isRequired,\n    capacityError: PropTypes.bool.isRequired,\n    timeError: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number, // 1 or 0\n    ]).isRequired,\n    showAllErrors: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    resetValues: PropTypes.func.isRequired,\n    updateUserBusyTime: PropTypes.func.isRequired,\n  }\n\n  checkForErrors = () => {\n    const {\n      nameError,\n      parti—ÅipantsError,\n      roomError,\n      capacityError,\n      timeError,\n    } = this.props;\n\n    return nameError || parti—ÅipantsError || roomError || capacityError || timeError;\n  }\n\n  handleCreate = () => {\n    const {\n      createEvent, triggerModal, showAllErrors, currentEvent, updateUserBusyTime,\n    } = this.props;\n\n    const isErrors = this.checkForErrors();\n\n    if (!isErrors) {\n      createEvent(currentEvent);\n      updateUserBusyTime(currentEvent.users, { ...currentEvent.time, ...currentEvent.date });\n      triggerModal(TRIGGER_CREATE_MODAL);\n    } else {\n      showAllErrors();\n    }\n  }\n\n  handleEdit = () => {\n    const {\n      editEvent, triggerModal, currentEvent, showAllErrors, resetValues,\n    } = this.props;\n\n    const isErrors = this.checkForErrors();\n\n    if (!isErrors) {\n      editEvent(currentEvent, currentEvent.id);\n      triggerModal(TRIGGER_EDIT_MODAL);\n      updateUserBusyTime(currentEvent.users, currentEvent.time);\n      resetValues();\n    } else {\n      showAllErrors();\n    }\n  }\n\n  render() {\n    const { onCancel, onDelete, edit, intl: { formatMessage } } = this.props;\n    const cancelBtnText = formatMessage({ id: 'meeting.bottomBtns.cancelBtnText' });\n    const deleteBtnText = formatMessage({ id: 'meeting.bottomBtns.deleteBtnText' });\n    const saveBtnText = formatMessage({ id: 'meeting.bottomBtns.saveBtnText' });\n    const createBtnText = formatMessage({ id: 'meeting.bottomBtns.createBtnText' });\n\n    return (\n      <div className=\"bottom-btns\">\n        <GreyBtn onClick={onCancel}>\n          {cancelBtnText}\n        </GreyBtn>\n\n        {edit\n          ? (\n            <Fragment>\n              <GreyBtn\n                onClick={onDelete}\n                className=\"bottom-btns__delete-btn\"\n              >\n                {deleteBtnText}\n              </GreyBtn>\n\n              <SubmitBtn\n                text={saveBtnText}\n                onClick={this.handleEdit}\n                className=\"bottom-btns__save-btn\"\n              />\n            </Fragment>\n          )\n\n          : (\n            <SubmitBtn\n              text={createBtnText}\n              onClick={this.handleCreate}\n              className=\"bottom-btns__submit-btn\"\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentEvent: state.eventsReducer.currentEvent,\n  nameError: state.errorReducer.nameError,\n  parti—ÅipantsError: state.errorReducer.parti—ÅipantsError,\n  roomError: state.errorReducer.roomError,\n  capacityError: state.errorReducer.capacityError,\n  timeError: state.errorReducer.timeError,\n});\n\nconst mapDispatchToProps = {\n  createEvent,\n  editEvent,\n  triggerModal,\n  resetValues,\n  showAllErrors,\n  updateUserBusyTime,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BottomBtns));\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './DeleteBtn.scss';\r\n\r\nexport default class DeleteBtn extends Component {\r\n  static propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n  }\r\n\r\n  mobileDeleteBtnStyles = {\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    color: '#ff3333',\r\n    textAlign: 'center',\r\n    height: '60px',\r\n    fontFamily: 'TextBook, sans-serif',\r\n    fontWeight: 'normal',\r\n    fontSize: '17px',\r\n    cursor: 'pointer',\r\n    border: 'none',\r\n    transition: '.15s ease-in-out',\r\n    outline: 'none',\r\n    ':focus,:active': {\r\n      color: '#f00',\r\n    },\r\n  }\r\n\r\n  render() {\r\n    const { text, onClick, className } = this.props;\r\n\r\n    return (\r\n      <button className={`delete-btn ${className}`} onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { CHANGE_EVENT_NAME } from '../../consts/eventsReducer';\n\nconst setEventName = value => ({\n  type: CHANGE_EVENT_NAME,\n  payload: value,\n});\n\nexport default setEventName;\n","import { NAME_ERROR } from '../../consts/errorReducer';\n\nconst checkForNameError = name => ({\n  type: NAME_ERROR,\n  isError: !name,\n});\n\nexport default checkForNameError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Input from '../../ui/Input';\nimport setEventName from '../../../action-creators/eventsReducer/setEventName';\nimport checkForNameError from '../../../action-creators/errorReducer/checkForNameError';\nimport HandleErrors from '../HandleErrors';\nimport addLabel from '../../HOC/addLabel';\n\nclass EventNameSetter extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    setEventName: PropTypes.func.isRequired,\n    eventName: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    nameError: PropTypes.bool.isRequired,\n    checkForNameError: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    placeholder: '',\n  }\n\n  componentDidUpdate() {\n    const { checkForNameError, eventName } = this.props;\n\n    checkForNameError(eventName);\n  }\n\n  handleChange = (e) => {\n    const { setEventName } = this.props;\n\n    setEventName(e.target.value);\n  }\n\n  render() {\n    const {\n      eventName,\n      nameError,\n      intl: { formatMessage },\n      isAllErrorsShown,\n      setEventName,\n      checkForNameError,\n      ...otherProps\n    } = this.props;\n    const errorText = formatMessage({ id: 'meeting.eventNameSetter.errorText' });\n\n    return (\n      <div>\n        <HandleErrors\n          message={errorText}\n          isError={nameError}\n        />\n\n        <Input\n          value={eventName}\n          isError={nameError && isAllErrorsShown}\n          onChange={this.handleChange}\n          {...otherProps}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  eventName: state.eventsReducer.currentEvent.name,\n  nameError: state.errorReducer.nameError,\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\n});\n\nconst mapDispatchToProps = {\n  setEventName,\n  checkForNameError,\n};\n\nconst ConnectedComponent = connect(\n  mapStateToProps, mapDispatchToProps,\n)(injectIntl(EventNameSetter));\n\nexport default addLabel(ConnectedComponent);\n","import React from 'react';\nimport FontAwesomeIcon from 'react-fontawesome';\nimport { injectIntl } from 'react-intl';\nimport RoundBtn from '../RoundBtn';\n\nexport default injectIntl((props) => {\n  const { intl: { formatMessage }, ...otherProps } = props;\n  const label = formatMessage({ id: 'closeBtnAriaLabel' });\n\n  return (\n    <RoundBtn {...otherProps} aria-label={label}>\n      <FontAwesomeIcon\n        name=\"times\"\n      />\n    </RoundBtn>\n  );\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FocusTrap from 'react-focus-trap';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Dropdown from '../Dropdown';\nimport LargeHeadline from '../../ui/LargeHeadline';\nimport DateAndTime from '../DateAndTime';\nimport RoomCards from '../RoomCards';\nimport BottomBtns from '../BottomBtns';\nimport DeleteBtn from '../../ui/DeleteBtn';\nimport resetValues from '../../../action-creators/eventsReducer/resetValues';\nimport triggerModal from '../../../action-creators/pageReducer/triggerModal';\nimport {\n  TRIGGER_CREATE_MODAL,\n  TRIGGER_EDIT_MODAL,\n  TRIGGER_DELETE_MODAL,\n} from '../../../consts/pageReducer';\nimport EventNameSetter from '../EventNameSetter';\nimport CloseBtn from '../../ui/CloseBtn';\nimport './Meeting.scss';\n\nclass Meeting extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    triggerModal: PropTypes.func.isRequired,\n    edit: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    resetValues: PropTypes.func.isRequired,\n  }\n\n  closeModal = () => {\n    const { edit, triggerModal, resetValues } = this.props;\n\n    if (edit) {\n      triggerModal(TRIGGER_EDIT_MODAL);\n      resetValues();\n    } else {\n      triggerModal(TRIGGER_CREATE_MODAL);\n    }\n  }\n\n  handleDelete = () => {\n    const { triggerModal } = this.props;\n\n    triggerModal(TRIGGER_DELETE_MODAL);\n  }\n\n  render() {\n    const { title, edit, intl: { formatMessage } } = this.props;\n    const nameSetterPlaceholder = formatMessage({ id: 'meeting.eventNameSetter.placeholder' });\n    const nameSetterLabel = formatMessage({ id: 'meeting.eventNameSetter.label' });\n    const dropdownPlaceholder = formatMessage({ id: 'meeting.dropdown.placeholder' });\n    const dropdownLabel = formatMessage({ id: 'meeting.dropdown.label' });\n    const deleteBtnText = formatMessage({ id: 'meeting.edit.deleteBtnText' });\n\n    return (\n      <FocusTrap>\n        <section className=\"meeting\">\n          <div className=\"meeting__inner\">\n            <div className=\"meeting-section\">\n              <LargeHeadline className=\"meeting__headline\">{title}</LargeHeadline>\n            </div>\n\n            <div className=\"meeting-section\">\n              <EventNameSetter\n                label={nameSetterLabel}\n                placeholder={nameSetterPlaceholder}\n                className=\"meeting-section__subsection\"\n              />\n\n              <DateAndTime className=\"meeting-section__subsection\" />\n\n              <CloseBtn className=\"meeting__close-btn\" onClick={this.closeModal} />\n            </div>\n\n            <div className=\"meeting-section\">\n              <Dropdown\n                label={dropdownLabel}\n                placeholder={dropdownPlaceholder}\n                className=\"meeting-section__subsection\"\n              />\n\n              <RoomCards\n                className=\"meeting-section__subsection\"\n              />\n            </div>\n\n            {edit\n              && (\n                <DeleteBtn\n                  text={deleteBtnText}\n                  onClick={this.handleDelete}\n                  className=\"meeting__delete-btn\"\n                />\n              )\n            }\n          </div>\n\n          <BottomBtns\n            onCancel={this.closeModal}\n            onDelete={this.handleDelete}\n            edit={edit}\n          />\n\n        </section>\n      </FocusTrap>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  edit: state.pageReducer.editEventModalOpen,\n});\n\nconst mapDispatchToProps = {\n  triggerModal,\n  resetValues,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Meeting));\n"],"sourceRoot":""}