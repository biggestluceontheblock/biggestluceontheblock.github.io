{"version":3,"sources":["intl/shapes.js","components/ui/Headline/index.js","components/ui/Paragraph/index.js","components/ui/RoundBtn/index.js","components/ui/GreyParagraph/index.js","action-creators/eventsReducer/updateDate.js","action-creators/roomsReducer/triggerSelected.js","action-creators/eventsReducer/resetRoom.js","../node_modules/react-day-picker/DayPicker.js","../node_modules/react-day-picker/lib/src/PropTypes.js","components/ui/ArrowBtn/index.js","action-creators/dateReducer/updateCurrentDate.js","action-creators/dateReducer/updateBtnState.js","components/connected/Calendar/index.js","action-creators/dateReducer/triggerCalendar.js","components/connected/DatePicker/index.js","components/ui/Time/index.js","components/connected/TimeLine/index.js","components/ui/EditBtn/index.js","components/ui/TooltipParticipators/index.js","components/ui/Tooltip/index.js","components/ui/Event/index.js","action-creators/eventsReducer/setEventForEditing.js","components/connected/EventRow/index.js","components/ui/EventGroup/index.js","action-creators/eventsReducer/loadEvents.js","components/connected/Events/index.js","components/ui/TimeTable/index.js","components/ui/RoomName/index.js","components/ui/RoomGroup/index.js","components/connected/Rooms/index.js","action-creators/mainContentReducer/fillTimeStripeArray.js","action-creators/mainContentReducer/rearrangeRooms.js","action-creators/roomsReducer/loadRooms.js","components/connected/MainContent/index.js"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","userShape","PropTypes","shape","login","string","isRequired","avatarUrl","homeFloor","number","roomShape","arrayOf","name","floor","maxVisitors","selected","bool","dateShape","startingDate","startingMonth","timeShape","startingHours","endingHours","startingMinutes","endingMinutes","eventShape","users","room","date","time","id","rearrangedRoomShape","rooms","objectOf","Headline","_ref","className","children","otherProps","Object","C_Projects_peregovorki_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","concat","Paragraph","RoundBtn","defaultProps","GreyParagraph","_consts_eventsReducer__WEBPACK_IMPORTED_MODULE_0__","updateDate","month","type","UPDATE_DATE","_consts_roomsReducer__WEBPACK_IMPORTED_MODULE_0__","triggerSelected","TRIGGER_ROOM","resetRoom","RESET_ROOM","DayPicker","DateUtils","LocaleUtils","ModifiersUtils","Weekday","Navbar","module","exports","WeekdayPropTypes","propTypes","NavbarPropTypes","defineProperty","value","ModifierPropType","undefined","obj","_propTypes","_propTypes2","__esModule","default","PrimitiveTypes","localeUtils","formatMonthTitle","func","formatWeekdayShort","formatWeekdayLong","getFirstDayOfWeek","range","from","instanceOf","Date","to","after","before","oneOfType","array","ArrowBtn","rotation","objectWithoutProperties","react_default","lib_default","style","position","right","left","updateCurrentDate","newMonth","newDate","UPDATE_CURRENT_DATE","updateBtnState","UPDATE_BTN_STATE","Calendar","modifiersStyles","highlightedDate","color","backgroundColor","borderRadius","day","_this$props","_this","props","getDate","getMonth","_this$props2","this","locale","months","daysShort","labels","firstDay","now","modifiers","getFullYear","DayPicker_default","weekdaysShort","firstDayOfWeek","onDayClick","disabledDays","fromMonth","Component","mapDispatchToProps","connect","state","dateReducer","triggerCalendar","TRIGGER_CALENDAR","DatePicker","handleClickOutside","calendarVisible","dayOfTheWeek","formatMessage","intl","days","monthsShort","todayMsg","tomorrowMsg","currentDate","todayDate","todayMonth","specifiedDate","getDay","nextDay","handleNext","_this$props3","updateNewEventDate","handlePrev","_this$props4","lastDayInMonth","_this$props5","prevDayBtnDisabled","rightArrowBtnLabel","leftArrowBtnLabel","ui_ArrowBtn","disabled","onClick","aria-label","connected_Calendar","injectIntl","onClickOutside","Time","hours","lessThanTwoDigitHours","TimeLine","renderTimeStripes","timeStripeArray","map","timeStripe","ui_Time","key","lastInTimeArray","slice","containerStyle","width","mainContentReducer","EditBtn","firstUser","remainingParticipators","remainingUsersLength","length","src","alt","Tooltip","roomName","openEditModal","ui_TooltipParticipators","Event","tooltipOpened","tooltipTop","tooltipLeft","setState","triggerTooltip","prevState","getTooltipPosition","e","rect","target","getBoundingClientRect","x","clientX","y","clientY","top","onEventClick","offsetLeft","_this$state","marginLeft","tooltipPosition","ui_Tooltip","focus","PureComponent","setEventForEditing","event","SET_EVENT_FOR_EDITING","payload","EventRow","getWidth","openingHours","closingHours","getEventDate","monthsValue","getEventTime","getEventOffsetLeft","Number","getEventWidth","triggerModal","TRIGGER_EDIT_MODAL","_this2","events","containerWidth","ui_Event","pageReducer","openTime","closeTime","EventGroup","renderEventRows","displayedDate","displayedMonth","neededEvents","filter","connected_EventRow","loadEvents","dispatch","getLocalStorageItems","then","LOAD_EVENTS","loadEventsActionCreator","Events","rearrangedRooms","rearrangedRoom","ui_EventGroup_EventGroup","eventsReducer","TimeTable","clicked","timeTable","createRef","shouldUseDragging","isIE","window","MSInputMethodContext","document","documentMode","isSafari","navigator","userAgent","indexOf","triggerClicked","current","cursor","handleDrag","preventDefault","scrollLeft","movementX","handleScroll","deltaY","move","addEventListener","ref","connected_TimeLine","connected_Events","visitorsLimit","floorName","ui_RoomName","Rooms","renderRoomGroups","ui_RoomGroup","fillTimeStripeArray","newTimeStripeArray","i","push","FILL_TIMESTRIPE_ARRAY","rearrangeRooms","forEach","newRoom","rearrangedRoomsElem","every","sortByFloor","pivot","Math","random","less","elem","greater","toConsumableArray","REARRANGE_ROOMS","loadRooms","LOAD_ROOMS","loadRoomsActionCreator","MainContent","openHours","closeHours","hidden","connected_DatePicker","connected_Rooms","ui_TimeTable"],"mappings":"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","file":"static/js/5.e44390b7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const userShape = PropTypes.shape({\r\n  login: PropTypes.string.isRequired,\r\n  avatarUrl: PropTypes.string.isRequired,\r\n  homeFloor: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const usersShape = PropTypes.arrayOf(userShape);\r\n\r\nexport const roomShape = PropTypes.shape({\r\n  name: PropTypes.string,\r\n  floor: PropTypes.number,\r\n  maxVisitors: PropTypes.number,\r\n  selected: PropTypes.bool,\r\n});\r\n\r\nexport const roomsShape = PropTypes.arrayOf(roomShape);\r\n\r\nexport const dateShape = PropTypes.shape({\r\n  startingDate: PropTypes.number.isRequired,\r\n  startingMonth: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const timeShape = PropTypes.shape({\r\n  startingHours: PropTypes.string.isRequired,\r\n  endingHours: PropTypes.string.isRequired,\r\n  startingMinutes: PropTypes.string.isRequired,\r\n  endingMinutes: PropTypes.string.isRequired,\r\n});\r\n\r\nexport const eventShape = PropTypes.shape({\r\n  name: PropTypes.string.isRequired,\r\n  users: PropTypes.arrayOf(userShape).isRequired,\r\n  room: roomShape.isRequired,\r\n  date: dateShape.isRequired,\r\n  time: timeShape.isRequired,\r\n  id: PropTypes.string,\r\n});\r\n\r\nexport const eventsShape = PropTypes.arrayOf(eventShape);\r\n\r\n\r\nexport const timeStripeArrayShape = PropTypes.arrayOf(PropTypes.number);\r\n\r\nexport const rearrangedRoomShape = PropTypes.shape({\r\n  floor: PropTypes.number.isRequired,\r\n  rooms: PropTypes.arrayOf(roomShape),\r\n});\r\n\r\nexport const rearrangedRoomsShape = PropTypes.arrayOf(rearrangedRoomShape);\r\n\r\nexport const workingTimeShape = PropTypes.objectOf(PropTypes.string);\n","import React from 'react';\nimport './Headline.scss';\n\nconst Headline = ({ className, children, ...otherProps }) => (\n  <h2 className={`headline ${className}`} {...otherProps}>{children}</h2>\n);\n\nexport default Headline;\n","import React from 'react';\nimport './Paragraph.scss';\n\nconst Paragraph = ({ className, children, ...otherProps }) => (\n  <p className={`paragraph ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default Paragraph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RoundBtn.scss';\n\nconst RoundBtn = ({ className, children, ...otherProps }) => (\n  <button className={`round-btn ${className}`} {...otherProps}>{children}</button>\n);\n\nRoundBtn.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]).isRequired,\n  className: PropTypes.string,\n};\n\nRoundBtn.defaultProps = {\n  className: '',\n};\n\nexport default RoundBtn;\n","import React from 'react';\nimport './GreyParagraph.scss';\n\nconst GreyParagraph = ({ className, children, ...otherProps }) => (\n  <p className={`grey-paragraph ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default GreyParagraph;\n","import { UPDATE_DATE } from '../../consts/eventsReducer';\n\nconst updateDate = (month, date) => ({\n  type: UPDATE_DATE,\n  month,\n  date,\n});\n\nexport default updateDate;\n","import { TRIGGER_ROOM } from '../../consts/roomsReducer';\n\nconst triggerSelected = id => ({\n  type: TRIGGER_ROOM,\n  id,\n});\n\nexport default triggerSelected;\n","import { RESET_ROOM } from '../../consts/eventsReducer';\n\nconst resetRoom = () => ({\n  type: RESET_ROOM,\n});\n\nexport default resetRoom;\n","/*\n  Used as main file in package.json\n*/\n\n/* eslint-disable no-var */\n\n/* eslint-env node */\nvar DayPicker = require('./lib/src/DayPicker');\n\nvar DateUtils = require('./lib/src/DateUtils');\n\nvar LocaleUtils = require('./lib/src/LocaleUtils');\n\nvar ModifiersUtils = require('./lib/src/ModifiersUtils');\n\nvar Weekday = require('./lib/src/Weekday');\n\nvar Navbar = require('./lib/src/Navbar');\n\nvar PropTypes = require('./lib/src/PropTypes');\n\nmodule.exports = DayPicker;\nmodule.exports.DateUtils = DateUtils;\nmodule.exports.LocaleUtils = LocaleUtils;\nmodule.exports.ModifiersUtils = ModifiersUtils;\nmodule.exports.WeekdayPropTypes = Weekday.propTypes;\nmodule.exports.NavbarPropTypes = Navbar.propTypes;\nmodule.exports.PropTypes = PropTypes;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModifierPropType = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PrimitiveTypes = {\n  localeUtils: _propTypes2.default.shape({\n    formatMonthTitle: _propTypes2.default.func,\n    formatWeekdayShort: _propTypes2.default.func,\n    formatWeekdayLong: _propTypes2.default.func,\n    getFirstDayOfWeek: _propTypes2.default.func\n  }),\n  range: _propTypes2.default.shape({\n    from: _propTypes2.default.instanceOf(Date),\n    to: _propTypes2.default.instanceOf(Date)\n  }),\n  after: _propTypes2.default.shape({\n    after: _propTypes2.default.instanceOf(Date)\n  }),\n  before: _propTypes2.default.shape({\n    before: _propTypes2.default.instanceOf(Date)\n  })\n};\n\nvar ModifierPropType = exports.ModifierPropType = _propTypes2.default.oneOfType([PrimitiveTypes.after, PrimitiveTypes.before, PrimitiveTypes.range, _propTypes2.default.func, _propTypes2.default.array]);\n\nexports.default = PrimitiveTypes;","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport RoundBtn from '../RoundBtn';\nimport './ArrowBtn.scss';\n\nconst ArrowBtn = ({ rotation, className, ...otherProps }) => {\n  const renderArrowIcon = () => {\n    if (rotation === 'left') {\n      return (\n        <FontAwesome\n          name=\"chevron-left\"\n          style={{\n            position: 'relative',\n            right: '1px',\n          }}\n        />\n      );\n    }\n\n    if (rotation === 'right') {\n      return (\n        <FontAwesome\n          name=\"chevron-right\"\n          style={{\n            position: 'relative',\n            left: '1px',\n          }}\n        />\n      );\n    }\n  };\n\n  return (\n    <RoundBtn\n      className={`round-btn--arrow ${className}`}\n      {...otherProps}\n    >\n      {renderArrowIcon()}\n    </RoundBtn>\n  );\n};\n\nArrowBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  rotation: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nArrowBtn.defaultProps = {\n  className: '',\n};\n\nexport default ArrowBtn;\n","import { UPDATE_CURRENT_DATE } from '../../consts/dateReducer';\r\n\r\nconst updateCurrentDate = (newMonth, newDate) => ({\r\n  type: UPDATE_CURRENT_DATE,\r\n  newMonth,\r\n  newDate,\r\n});\r\n\r\nexport default updateCurrentDate;\n","import { UPDATE_BTN_STATE } from '../../consts/dateReducer';\r\n\r\nconst updateBtnState = () => ({\r\n  type: UPDATE_BTN_STATE,\r\n});\r\n\r\nexport default updateBtnState;\n","import React, { Component } from 'react';\r\nimport DayPicker from 'react-day-picker';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport updateCurrentDate from '../../../action-creators/dateReducer/updateCurrentDate';\r\nimport updateBtnState from '../../../action-creators/dateReducer/updateBtnState';\r\nimport './Calendar.scss';\r\n\r\nclass Calendar extends Component {\r\n  static propTypes = {\r\n    date: PropTypes.number.isRequired,\r\n    month: PropTypes.number.isRequired,\r\n    updateCurrentDate: PropTypes.func.isRequired,\r\n    updateBtnState: PropTypes.func.isRequired,\r\n    locale: PropTypes.string.isRequired,\r\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    daysShort: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    labels: PropTypes.objectOf(PropTypes.string).isRequired,\r\n    firstDay: PropTypes.number.isRequired,\r\n  }\r\n\r\n  modifiersStyles = {\r\n    highlightedDate: {\r\n      color: '#fff',\r\n      backgroundColor: '#55a8fe',\r\n      borderRadius: '50%',\r\n    },\r\n  }\r\n\r\n  updateDate = (day) => {\r\n    const { updateCurrentDate, updateBtnState } = this.props;\r\n    const newDate = day.getDate();\r\n    const newMonth = day.getMonth();\r\n\r\n    updateCurrentDate(newMonth, newDate);\r\n    updateBtnState();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      date, month, locale, months, daysShort, labels, firstDay,\r\n    } = this.props;\r\n    const now = new Date();\r\n    const modifiers = {\r\n      highlightedDate: new Date(now.getFullYear(), month, date),\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"calendar\"\r\n      >\r\n        <DayPicker\r\n          locale={locale}\r\n          months={months}\r\n          weekdaysShort={daysShort}\r\n          firstDayOfWeek={firstDay}\r\n          labels={labels}\r\n          onDayClick={this.updateDate}\r\n          modifiers={modifiers}\r\n          modifiersStyles={this.modifiersStyles}\r\n          disabledDays={[{\r\n            before: now,\r\n          }]}\r\n          fromMonth={now}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  date: state.dateReducer.date,\r\n  month: state.dateReducer.month,\r\n  locale: state.dateReducer.locale,\r\n  months: state.dateReducer.months,\r\n  daysShort: state.dateReducer.daysShort,\r\n  labels: state.dateReducer.labels,\r\n  firstDay: state.dateReducer.firstDay,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateCurrentDate,\r\n  updateBtnState,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\r\n","import { TRIGGER_CALENDAR } from '../../consts/dateReducer';\r\n\r\nconst triggerCalendar = () => ({\r\n  type: TRIGGER_CALENDAR,\r\n});\r\n\r\nexport default triggerCalendar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport onClickOutside from 'react-onclickoutside';\nimport ArrowBtn from '../../ui/ArrowBtn';\nimport Calendar from '../Calendar';\nimport Headline from '../../ui/Headline';\nimport updateCurrentDate from '../../../action-creators/dateReducer/updateCurrentDate';\nimport updateBtnState from '../../../action-creators/dateReducer/updateBtnState';\nimport updateNewEventDate from '../../../action-creators/eventsReducer/updateDate';\nimport triggerCalendar from '../../../action-creators/dateReducer/triggerCalendar';\nimport './DatePicker.scss';\n\nclass DatePicker extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    date: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    prevDayBtnDisabled: PropTypes.bool.isRequired,\n    updateBtnState: PropTypes.func.isRequired,\n    updateNewEventDate: PropTypes.func.isRequired,\n    updateCurrentDate: PropTypes.func.isRequired,\n    triggerCalendar: PropTypes.func.isRequired,\n    calendarVisible: PropTypes.bool.isRequired,\n    days: PropTypes.arrayOf(PropTypes.string).isRequired,\n    monthsShort: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }\n\n  handleClickOutside = () => {\n    const { triggerCalendar, calendarVisible } = this.props;\n\n    if (calendarVisible) {\n      triggerCalendar();\n    }\n  }\n\n  getDate = (date, month) => {\n    const { intl: { formatMessage }, days, monthsShort } = this.props;\n    const todayMsg = formatMessage({ id: 'datePicker.todayMsg' });\n    const tomorrowMsg = formatMessage({ id: 'datePicker.tomorrowMsg' });\n    const currentDate = new Date();\n    const todayDate = currentDate.getDate();\n    const todayMonth = currentDate.getMonth();\n    const specifiedDate = new Date(currentDate.getFullYear(),\n      month, date).getDay();\n    const nextDay = new Date(currentDate.getFullYear(), todayMonth, todayDate + 1).getDate();\n\n    let dayOfTheWeek;\n\n    switch (date) {\n      case todayDate:\n        if (todayMonth === month) {\n          dayOfTheWeek = todayMsg;\n        }\n        break;\n\n      case nextDay:\n        dayOfTheWeek = tomorrowMsg;\n        break;\n\n      default:\n        dayOfTheWeek = days[specifiedDate];\n    }\n\n    return `${date} ${monthsShort[month]} · ${dayOfTheWeek}`;\n  }\n\n  handleNext = () => {\n    const {\n      updateBtnState, date, month, updateNewEventDate, updateCurrentDate,\n    } = this.props;\n    const isLastDayInNextMonth = new Date(\n      new Date().getFullYear(), month + 1, 0,\n    ).getDate() === date;\n\n    if (isLastDayInNextMonth) {\n      updateCurrentDate(month + 1, 1);\n      updateNewEventDate(month + 1, 1);\n    } else {\n      updateCurrentDate(month, date + 1);\n      updateNewEventDate(month, date + 1);\n    }\n\n    updateBtnState();\n  }\n\n  handlePrev = () => {\n    const {\n      updateBtnState, date, month, updateNewEventDate, updateCurrentDate,\n    } = this.props;\n    const lastDayInMonth = new Date(new Date().getFullYear(), month, 0).getDate();\n    const shouldChangeMonth = new Date(new Date().getFullYear(), month, 1).getDate() === date;\n\n    if (shouldChangeMonth) {\n      updateCurrentDate(month - 1, lastDayInMonth);\n      updateNewEventDate(month - 1, lastDayInMonth);\n    } else {\n      updateCurrentDate(month, date - 1);\n      updateNewEventDate(month, date - 1);\n    }\n\n    updateBtnState();\n  }\n\n  render() {\n    const {\n      date,\n      month,\n      prevDayBtnDisabled,\n      calendarVisible,\n      triggerCalendar,\n      intl: {\n        formatMessage,\n      },\n    } = this.props;\n    const rightArrowBtnLabel = formatMessage({ id: 'datePicker.rightArrowBtnLabel' });\n    const leftArrowBtnLabel = formatMessage({ id: 'datePicker.rightArrowBtnLabel' });\n\n    return (\n      <div>\n        <div className=\"date-picker\">\n          <ArrowBtn\n            rotation=\"left\"\n            disabled={prevDayBtnDisabled}\n            onClick={this.handlePrev}\n            className=\"date-picker__btn-left\"\n            aria-label={leftArrowBtnLabel}\n          />\n\n          <Headline className=\"date-picker__headline\" onClick={triggerCalendar}>\n            {this.getDate(date, month)}\n          </Headline>\n\n          <ArrowBtn\n            rotation=\"right\"\n            onClick={this.handleNext}\n            className=\"date-picker__btn-right\"\n            aria-label={rightArrowBtnLabel}\n          />\n        </div>\n\n        {calendarVisible\n          && <Calendar triggerCalendar={triggerCalendar} />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  date: state.dateReducer.date,\n  month: state.dateReducer.month,\n  prevDayBtnDisabled: state.dateReducer.prevDayBtnDisabled,\n  calendarVisible: state.dateReducer.calendarVisible,\n  locale: state.dateReducer.locale,\n  days: state.dateReducer.days,\n  monthsShort: state.dateReducer.monthsShort,\n});\n\nconst mapDispatchToProps = {\n  updateBtnState,\n  updateNewEventDate,\n  updateCurrentDate,\n  triggerCalendar,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(onClickOutside(DatePicker)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paragraph from '../Paragraph';\nimport './Time.scss';\n\nconst Time = ({ hours, lessThanTwoDigitHours }) => (\n  <Paragraph\n    className={`time ${lessThanTwoDigitHours ? 'time--with-offset' : ''}`}\n  >\n    {hours}\n    :00\n  </Paragraph>\n);\n\nTime.propTypes = {\n  hours: PropTypes.number.isRequired,\n  lessThanTwoDigitHours: PropTypes.bool.isRequired,\n};\n\nexport default Time;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { timeStripeArrayShape } from '../../../intl/shapes';\nimport Time from '../../ui/Time';\nimport './TimeLine.scss';\n\nclass TimeLine extends Component {\n  static propTypes = {\n    timeStripeArray: timeStripeArrayShape.isRequired,\n  }\n\n  renderTimeStripes = () => {\n    const { timeStripeArray } = this.props;\n\n    return timeStripeArray.map(timeStripe => (\n      <Time\n        hours={timeStripe}\n        key={timeStripe}\n        lessThanTwoDigitHours={timeStripe < 10}\n      />\n    ));\n  }\n\n  render() {\n    const { timeStripeArray } = this.props;\n    const lastInTimeArray = timeStripeArray.slice(-1)[0];\n    const containerStyle = {\n      width: `${lastInTimeArray * 100 + 105}px`, // no fucking idea...\n    };\n\n    return (\n      <div\n        className=\"timeline\"\n        style={containerStyle}\n      >\n        {this.renderTimeStripes()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  timeStripeArray: state.mainContentReducer.timeStripeArray,\n});\n\nexport default connect(mapStateToProps)(TimeLine);\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport RoundBtn from '../RoundBtn';\n\nexport default props => (\n  <RoundBtn {...props}>\n    <FontAwesome\n      name=\"pencil\"\n    />\n  </RoundBtn>\n);\n","import React from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Paragraph from '../Paragraph';\nimport { usersShape } from '../../../intl/shapes';\nimport './TooltipParticipators.scss';\n\nconst TooltipParticipators = ({ users, intl: { formatMessage } }) => {\n  const firstUser = users[0];\n  const remainingUsersLength = users.length - 1;\n  const remainingParticipators = formatMessage(\n    { id: 'tooltipParticipators.remainingParticipators' },\n    { remainingUsersLength },\n  );\n\n  return (\n    <div className=\"tooltip-participators\">\n      <div className=\"tooltip-participators__image-wrapper\">\n        <img\n          src={firstUser.avatarUrl}\n          alt={firstUser.login}\n          className=\"tooltip-participators__image\"\n        />\n      </div>\n\n      <Paragraph>\n        {firstUser.login}\n        &nbsp;\n        <span className=\"tooltip-participators__grey-text\">\n          {remainingParticipators}\n        </span>\n      </Paragraph>\n    </div>\n  );\n};\n\nTooltipParticipators.propTypes = {\n  intl: intlShape.isRequired,\n  users: usersShape.isRequired,\n};\n\nexport default injectIntl(TooltipParticipators);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Headline from '../Headline';\nimport Paragraph from '../Paragraph';\nimport EditBtn from '../EditBtn';\nimport TooltipParticipators from '../TooltipParticipators';\nimport { usersShape } from '../../../intl/shapes';\nimport './Tooltip.scss';\n\nconst Tooltip = ({\n  name, roomName, date, time, users, openEditModal, style,\n}) => (\n  <div className=\"tooltip\" style={style}>\n    <EditBtn className=\"tooltip__edit-btn\" onClick={openEditModal} />\n    <Headline className=\"tooltip__headline\">{name}</Headline>\n    <Paragraph className=\"tooltip__paragraph\">\n      {date}\n      ,\n      {' '}\n      {time}\n      {' '}\n      ·\n      {' '}\n      {roomName}\n    </Paragraph>\n    <TooltipParticipators users={users} />\n  </div>\n);\n\nTooltip.propTypes = {\n  name: PropTypes.string.isRequired,\n  roomName: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  users: usersShape.isRequired,\n  openEditModal: PropTypes.func.isRequired,\n  style: PropTypes.shape({\n    top: PropTypes.string,\n    left: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Tooltip;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport onClickOutside from 'react-onclickoutside';\nimport Tooltip from '../Tooltip';\nimport { usersShape } from '../../../intl/shapes';\nimport './Event.scss';\n\nclass Event extends PureComponent {\n  state = {\n    tooltipOpened: false,\n    tooltipTop: 0,\n    tooltipLeft: 0,\n  }\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    roomName: PropTypes.string.isRequired,\n    users: usersShape.isRequired,\n    time: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    offsetLeft: PropTypes.number.isRequired,\n    openEditModal: PropTypes.func.isRequired,\n  }\n\n  handleClickOutside = () => {\n    this.setState({\n      tooltipOpened: false,\n    });\n  }\n\n  triggerTooltip = () => {\n    this.setState(prevState => ({\n      tooltipOpened: !prevState.tooltipOpened,\n    }));\n  }\n\n  getTooltipPosition = (e) => {\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left - 220; // center relatively to the little triangle\n    const y = e.clientY - rect.top;\n\n    this.setState({\n      tooltipTop: y,\n      tooltipLeft: x,\n    });\n  }\n\n  onEventClick = (e) => {\n    this.triggerTooltip();\n    this.getTooltipPosition(e);\n  }\n\n  render() {\n    const {\n      name, roomName, users, time, date, openEditModal, width, offsetLeft,\n    } = this.props;\n    const { tooltipOpened, tooltipTop, tooltipLeft } = this.state;\n\n    const position = { width: `${width}px`, marginLeft: `${offsetLeft}px` };\n    const tooltipPosition = { top: `${tooltipTop}px`, left: `${tooltipLeft}px` };\n\n    return (\n      <div\n        className={`event ${tooltipOpened ? 'event--selected' : ''}`}\n        style={position}\n        onClick={this.onEventClick}\n      >\n        {tooltipOpened\n          && (\n          <Tooltip\n            style={tooltipPosition}\n            name={name}\n            roomName={roomName}\n            users={users}\n            openEditModal={openEditModal}\n            date={date}\n            time={time}\n            focus={tooltipOpened}\n          />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default onClickOutside(Event);\n","import { SET_EVENT_FOR_EDITING } from '../../consts/eventsReducer';\r\n\r\nconst setEventForEditing = event => ({\r\n  type: SET_EVENT_FOR_EDITING,\r\n  payload: event,\r\n});\r\n\r\nexport default setEventForEditing;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Event from '../../ui/Event';\nimport { roomShape, eventsShape } from '../../../intl/shapes';\nimport triggerModal from '../../../action-creators/pageReducer/triggerModal';\nimport setEventForEditing from '../../../action-creators/eventsReducer/setEventForEditing';\nimport triggerSelected from '../../../action-creators/roomsReducer/triggerSelected';\nimport resetRoom from '../../../action-creators/eventsReducer/resetRoom';\nimport { TRIGGER_EDIT_MODAL } from '../../../consts/pageReducer';\nimport './EventRow.scss';\n\nclass EventRow extends Component {\n  static propTypes = {\n    room: roomShape.isRequired,\n    events: eventsShape.isRequired,\n    openingHours: PropTypes.string.isRequired,\n    monthsValue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    setEventForEditing: PropTypes.func.isRequired,\n    triggerModal: PropTypes.func.isRequired,\n    triggerSelected: PropTypes.func.isRequired,\n    resetRoom: PropTypes.func.isRequired,\n    closingHours: PropTypes.string.isRequired,\n  }\n\n  getWidth = () => {\n    const { openingHours, closingHours } = this.props;\n\n    return `${(closingHours - openingHours) * 155}px`;\n  }\n\n  getEventDate = (date) => {\n    const { monthsValue } = this.props;\n    const { startingDate, startingMonth } = date;\n\n    return `${startingDate} ${monthsValue[startingMonth]}`;\n  }\n\n  getEventTime = (time) => {\n    const {\n      startingHours, startingMinutes, endingHours, endingMinutes,\n    } = time;\n\n    return `${startingHours}:${startingMinutes} – ${endingHours}:${endingMinutes}`;\n  }\n\n  getEventOffsetLeft = (startingHours, startingMinutes, openingHours) => {\n    if (Number(startingHours) === 8) {\n      return 10; // shitty styling fix\n    }\n\n    return (startingHours - openingHours) * 155 + Number(startingMinutes / 60 * 155);\n  }\n\n  getEventWidth = ({ startingHours, startingMinutes, endingHours, endingMinutes }) => {\n    if (Number(startingHours) === 8) {\n      return (endingHours - startingHours) * 155 + (\n        (endingMinutes / 60 * 155) - (startingMinutes / 60 * 155)\n      ) - 10; // +1 shitty styling fix\n    }\n\n    return (endingHours - startingHours) * 155 + (\n      (endingMinutes / 60 * 155) - (startingMinutes / 60 * 155)\n    );\n  }\n\n  openEditModal = (event) => {\n    const {\n      setEventForEditing, triggerModal, triggerSelected, resetRoom,\n    } = this.props;\n\n    resetRoom();\n    setEventForEditing(event);\n    triggerSelected(event.room.id);\n    triggerModal(TRIGGER_EDIT_MODAL);\n  }\n\n  render() {\n    const { room, events, openingHours, closingHours } = this.props;\n    const containerWidth = this.getWidth(openingHours, closingHours);\n\n    return (\n      <div className=\"event-row\" style={{ width: containerWidth }}>\n        {events.map((event) => {\n          const offsetLeft = this.getEventOffsetLeft(\n            event.time.startingHours,\n            event.time.startingMinutes,\n            openingHours,\n          );\n\n          const width = this.getEventWidth(event.time);\n          const date = this.getEventDate(event.date);\n          const time = this.getEventTime(event.time);\n\n          return (\n            <Event\n              key={event.id}\n              name={event.name}\n              roomName={room.name}\n              users={event.users}\n              openEditModal={() => {\n                this.openEditModal(event);\n              }}\n              offsetLeft={offsetLeft}\n              width={width}\n              date={date}\n              time={time}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  openingHours: state.pageReducer.openTime.hours,\n  closingHours: state.pageReducer.closeTime.hours,\n  monthsValue: state.dateReducer.monthsValue,\n});\n\nconst mapDispatchToProps = {\n  triggerModal,\n  setEventForEditing,\n  triggerSelected,\n  resetRoom,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventRow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport EventRow from '../../connected/EventRow';\nimport { roomsShape, eventsShape } from '../../../intl/shapes';\nimport './EventGroup.scss';\n\nexport default class EventGroup extends Component {\n  static propTypes = {\n    rooms: roomsShape.isRequired,\n    events: eventsShape.isRequired,\n    displayedDate: PropTypes.number.isRequired,\n    displayedMonth: PropTypes.number.isRequired,\n  }\n\n  renderEventRows = () => {\n    const {\n      rooms, events, displayedDate, displayedMonth,\n    } = this.props;\n\n    return rooms.map((room) => {\n      const neededEvents = events.filter(event => event.room.id === room.id\n        && event.date.startingDate === displayedDate\n        && event.date.startingMonth === displayedMonth);\n\n      return (\n        <EventRow\n          room={room}\n          events={neededEvents}\n          key={room.id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"event-group\">\n        {this.renderEventRows()}\n      </div>\n    );\n  }\n}\n","import { LOAD_EVENTS } from '../../consts/eventsReducer';\r\nimport getLocalStorageItems from '../../db/queries/getLocalStorageItems';\r\n\r\nconst loadEventsActionCreator = events => ({\r\n  type: LOAD_EVENTS,\r\n  payload: events,\r\n});\r\n\r\nconst loadEvents = () => (dispatch) => {\r\n  getLocalStorageItems('events')\r\n    .then((events) => {\r\n      dispatch(loadEventsActionCreator(events));\r\n    });\r\n};\r\n\r\nexport default loadEvents;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EventGroup from '../../ui/EventGroup';\nimport loadEvents from '../../../action-creators/eventsReducer/loadEvents';\nimport { eventsShape, rearrangedRoomsShape } from '../../../intl/shapes';\nimport './Events.scss';\n\nclass Events extends Component {\n  static propTypes = {\n    month: PropTypes.number.isRequired,\n    date: PropTypes.number.isRequired,\n    rearrangedRooms: rearrangedRoomsShape.isRequired,\n    events: eventsShape.isRequired,\n    loadEvents: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    const { loadEvents } = this.props;\n\n    loadEvents();\n  }\n\n  render() {\n    const {\n      rearrangedRooms, events, date, month,\n    } = this.props;\n\n    return (\n      <div className=\"events\">\n        {rearrangedRooms.map(rearrangedRoom => (\n          <EventGroup\n            displayedDate={date}\n            displayedMonth={month}\n            rooms={rearrangedRoom.rooms}\n            events={events}\n            key={rearrangedRoom.floor}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  month: state.dateReducer.month,\n  date: state.dateReducer.date,\n  rearrangedRooms: state.mainContentReducer.rearrangedRooms,\n  events: state.eventsReducer.events,\n});\n\nconst mapDispatchToProps = {\n  loadEvents,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);\n","import React, { Component, createRef } from 'react';\nimport TimeLine from '../../connected/TimeLine';\nimport Events from '../../connected/Events';\nimport './TimeTable.scss';\n\nclass TimeTable extends Component {\n  state = {\n    clicked: false,\n  }\n\n  timeTable = createRef()\n\n  componentDidMount() {\n    this.move();\n  }\n\n  shouldUseDragging = () => {\n    const isIE = !!window.MSInputMethodContext && !!document.documentMode;\n    const isSafari = navigator.userAgent.indexOf('Safari') > -1\n          && navigator.userAgent.indexOf('Chrome') === -1;\n\n    return !isIE && !isSafari;\n  }\n\n  triggerClicked = () => {\n    const { clicked } = this.state;\n    const timeTable = this.timeTable.current;\n\n    this.setState(prevState => ({\n      clicked: !prevState.clicked,\n    }));\n\n    timeTable.style.cursor = clicked ? 'grab' : 'grabbing';\n  }\n\n  handleDrag = (e) => {\n    const { clicked } = this.state;\n    const timeTable = this.timeTable.current;\n\n    e.preventDefault();\n\n    if (clicked) {\n      timeTable.scrollLeft = e.movementX < 0\n        ? timeTable.scrollLeft + 20\n        : timeTable.scrollLeft - 20;\n    }\n  }\n\n  handleScroll = (e) => {\n    const timeTable = this.timeTable.current;\n\n    e.preventDefault();\n\n    if (e.deltaY > 0) {\n      timeTable.scrollLeft += 20;\n    } else {\n      timeTable.scrollLeft -= 20;\n    }\n  }\n\n  move = () => {\n    const timeTable = this.timeTable.current;\n\n    if (this.shouldUseDragging()) {\n      timeTable.addEventListener('mousedown', this.triggerClicked);\n      timeTable.addEventListener('mouseup', this.triggerClicked);\n      timeTable.addEventListener('mousemove', this.handleDrag);\n    } else {\n      timeTable.addEventListener('wheel', this.handleScroll);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"time-table\">\n        <div\n          className=\"time-table__inner\"\n          ref={this.timeTable}\n        >\n          <TimeLine />\n          <Events />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimeTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Headline from '../Headline';\nimport Paragraph from '../Paragraph';\nimport './RoomName.scss';\n\nconst RoomName = ({ name, maxVisitors, intl: { formatMessage } }) => {\n  const visitorsLimit = formatMessage({ id: 'roomName.visitorsLimit' }, { maxVisitors });\n\n  return (\n    <div className=\"room-name\">\n      <Headline className=\"room-name__headline\">{name}</Headline>\n      <Paragraph className=\"room-name__paragraph\">\n        {visitorsLimit}\n      </Paragraph>\n    </div>\n  );\n};\n\nRoomName.propTypes = {\n  intl: intlShape.isRequired,\n  name: PropTypes.string.isRequired,\n  maxVisitors: PropTypes.number.isRequired,\n};\n\nexport default injectIntl(RoomName);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport RoomName from '../RoomName';\nimport GreyParagraph from '../GreyParagraph';\nimport { roomsShape } from '../../../intl/shapes';\nimport './RoomGroup.scss';\n\nconst RoomGroup = ({ floor, rooms, intl: { formatMessage } }) => {\n  const floorName = formatMessage({ id: 'roomGroup.floorName' }, { floor });\n  const renderRooms = () => (\n    rooms.map(room => (\n      <RoomName\n        name={room.name}\n        key={room.id}\n        maxVisitors={room.maxVisitors}\n      />\n    ))\n  );\n\n  return (\n    <div className=\"room-group\">\n      <GreyParagraph className=\"room-group__floor-name\">{floorName}</GreyParagraph>\n      {renderRooms()}\n    </div>\n  );\n};\n\nRoomGroup.propTypes = {\n  intl: intlShape.isRequired,\n  floor: PropTypes.number.isRequired,\n  rooms: roomsShape.isRequired,\n};\n\nexport default injectIntl(RoomGroup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport RoomGroup from '../../ui/RoomGroup';\nimport { rearrangedRoomsShape } from '../../../intl/shapes';\nimport './Rooms.scss';\n\nclass Rooms extends Component {\n  static propTypes = {\n    rearrangedRooms: rearrangedRoomsShape.isRequired,\n  }\n\n  renderRoomGroups = () => {\n    const { rearrangedRooms } = this.props;\n\n    return rearrangedRooms.map(obj => (\n      <RoomGroup\n        rooms={obj.rooms}\n        floor={obj.floor}\n        key={obj.floor}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"rooms\">\n        {this.renderRoomGroups()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  rearrangedRooms: state.mainContentReducer.rearrangedRooms,\n});\n\nexport default connect(mapStateToProps)(Rooms);\n","import { FILL_TIMESTRIPE_ARRAY } from '../../consts/mainContentReducer';\n\nconst fillTimeStripeArray = (openTime, closeTime) => {\n  const newTimeStripeArray = [];\n\n  for (let i = openTime; i < closeTime; i++) {\n    newTimeStripeArray.push(i);\n  }\n\n  return {\n    type: FILL_TIMESTRIPE_ARRAY,\n    timeStripeArray: newTimeStripeArray,\n  };\n};\n\nexport default fillTimeStripeArray;\n","import { REARRANGE_ROOMS } from '../../consts/mainContentReducer';\n\nconst sortByFloor = (rooms) => {\n  if (rooms.length < 2) {\n    return rooms;\n  }\n\n  const pivotPosition = Math.floor(Math.random() * rooms.length);\n  const pivot = rooms[pivotPosition];\n  const less = rooms.filter(elem => elem.floor < pivot.floor);\n\n  const greater = rooms.filter(elem => elem.floor > pivot.floor);\n\n  return [...sortByFloor(greater), pivot, ...sortByFloor(less)];\n};\n\nconst rearrangeRooms = (rooms) => {\n  let rearrangedRooms = [];\n\n  rooms.forEach((room) => {\n    const { floor, ...otherKeys } = room;\n    const newRoom = otherKeys;\n\n    if (rearrangedRooms.length > 0) {\n      rearrangedRooms.forEach((rearrangedRoomsElem) => {\n        const isUnique = rearrangedRooms.every(rearrangedRoomsElem => (\n          rearrangedRoomsElem.floor !== room.floor\n        ));\n\n        if (isUnique) {\n          rearrangedRooms.push({ floor: room.floor, rooms: [newRoom] });\n        } else if (rearrangedRoomsElem.floor === room.floor) {\n          rearrangedRoomsElem.rooms.push(newRoom);\n        }\n      });\n    } else {\n      rearrangedRooms.push({ floor: room.floor, rooms: [newRoom] });\n    }\n  });\n\n  rearrangedRooms = sortByFloor(rearrangedRooms);\n\n  return { type: REARRANGE_ROOMS, rearrangedRooms };\n};\n\nexport default rearrangeRooms;\n","import { LOAD_ROOMS } from '../../consts/roomsReducer';\r\nimport getLocalStorageItems from '../../db/queries/getLocalStorageItems';\r\nimport rearrangeRooms from '../mainContentReducer/rearrangeRooms';\r\n\r\nconst loadRoomsActionCreator = rooms => ({\r\n  type: LOAD_ROOMS,\r\n  payload: rooms,\r\n});\r\n\r\nconst loadRooms = () => (dispatch) => {\r\n  getLocalStorageItems('rooms')\r\n    .then((rooms) => {\r\n      dispatch(rearrangeRooms(rooms));\r\n      dispatch(loadRoomsActionCreator(rooms));\r\n    });\r\n};\r\n\r\nexport default loadRooms;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DatePicker from '../DatePicker';\nimport TimeTable from '../../ui/TimeTable';\nimport Rooms from '../Rooms';\nimport fillTimeStripeArray from '../../../action-creators/mainContentReducer/fillTimeStripeArray';\nimport loadRooms from '../../../action-creators/roomsReducer/loadRooms';\nimport './MainContent.scss';\n\nclass MainContent extends Component {\n  static propTypes = {\n    openHours: PropTypes.string.isRequired,\n    closeHours: PropTypes.string.isRequired,\n    loadRooms: PropTypes.func.isRequired,\n    hidden: PropTypes.bool.isRequired,\n    fillTimeStripeArray: PropTypes.func.isRequired,\n  }\n\n  componentDidMount() {\n    const {\n      fillTimeStripeArray, openHours, closeHours, loadRooms,\n    } = this.props;\n\n    loadRooms();\n    fillTimeStripeArray(Number(openHours), Number(closeHours));\n  }\n\n  render() {\n    const { hidden } = this.props;\n\n    return (\n      <main className={`main ${hidden ? 'hidden' : ''}`}>\n        <div className=\"left-column\">\n          <DatePicker />\n          <Rooms />\n        </div>\n\n        <TimeTable />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  openHours: state.pageReducer.openTime.hours,\n  closeHours: state.pageReducer.closeTime.hours,\n});\n\nconst mapDispatchToProps = {\n  fillTimeStripeArray,\n  loadRooms,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContent);\n"],"sourceRoot":""}