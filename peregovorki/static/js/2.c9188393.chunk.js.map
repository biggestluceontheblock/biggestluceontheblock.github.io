{"version":3,"sources":["intl/shapes.js","components/ui/Headline/index.js","components/ui/Paragraph/index.js","action-creators/eventsReducer/resetValues.js","components/ui/RoundBtn/index.js","components/ui/GreyParagraph/index.js","action-creators/eventsReducer/updateDate.js","action-creators/roomsReducer/triggerSelected.js","action-creators/eventsReducer/resetRoom.js","components/ui/GreyBtn/index.js","db/queries/deleteLocalStorageEvent.js","components/ui/ParticipatorCard/index.js","action-creators/eventsReducer/removeUser.js","action-creators/dropdownReducer/updateFreeUsers.js","action-creators/errorReducer/checkForParticipantsError.js","action-creators/errorReducer/checkForCapacityError.js","components/connected/Participators/index.js","action-creators/dropdownReducer/setFocused.js","components/ui/Input/index.js","action-creators/dropdownReducer/changeIndex.js","action-creators/dropdownReducer/onInputValueChange.js","action-creators/eventsReducer/addUser.js","components/connected/AutoCompleteInput/index.js","components/ui/DropdownOption/index.js","action-creators/dropdownReducer/getScrollbar.js","components/connected/AutoCompleteMenu/index.js","components/connected/AutoComplete/index.js","components/ui/ErrorText/index.js","components/connected/HandleErrors/index.js","components/HOC/addLabel/index.js","components/connected/Dropdown/index.js","components/ui/LargeHeadline/index.js","action-creators/dateReducer/changeValue.js","components/connected/DateSetterInput/index.js","components/connected/TimeInput/index.js","action-creators/eventsReducer/hoursActions/updateTime.js","action-creators/eventsReducer/hoursActions/resetTime.js","action-creators/eventsReducer/hoursActions/increaseTime.js","action-creators/eventsReducer/hoursActions/decreaseTime.js","action-creators/errorReducer/checkForTimeError.js","action-creators/errorReducer/checkForLimitError.js","components/connected/TimeSetter/index.js","components/connected/DateAndTime/index.js","components/ui/RoomCard/index.js","action-creators/eventsReducer/setRoom.js","action-creators/errorReducer/checkForRoomError.js","components/connected/RoomCards/index.js","db/queries/addLocalStorageEvent.js","action-creators/eventsReducer/createEvent.js","db/queries/updateLocalStorageEvent.js","action-creators/eventsReducer/editEvent.js","action-creators/errorReducer/showAllErrors.js","db/queries/addUserBusyTime.js","action-creators/usersReducer/updateUserBusyTime.js","components/connected/BottomBtns/index.js","components/ui/DeleteBtn/index.js","action-creators/eventsReducer/setEventName.js","action-creators/errorReducer/checkForNameError.js","components/connected/EventNameSetter/index.js","components/ui/CloseBtn/index.js","components/connected/Meeting/index.js"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","userShape","PropTypes","shape","login","string","isRequired","avatarUrl","homeFloor","number","roomShape","arrayOf","name","floor","maxVisitors","selected","bool","dateShape","startingDate","startingMonth","timeShape","startingHours","endingHours","startingMinutes","endingMinutes","eventShape","users","room","date","time","id","rearrangedRoomShape","rooms","objectOf","Headline","_ref","className","children","otherProps","Object","C_Projects_peregovorki_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","concat","Paragraph","_consts_eventsReducer__WEBPACK_IMPORTED_MODULE_0__","resetValues","type","RESET_VALUES","RoundBtn","defaultProps","GreyParagraph","updateDate","month","UPDATE_DATE","_consts_roomsReducer__WEBPACK_IMPORTED_MODULE_0__","triggerSelected","TRIGGER_ROOM","resetRoom","RESET_ROOM","GreyBtn","_getLocalStorageItems__WEBPACK_IMPORTED_MODULE_0__","deleteLocalstorageEvent","getLocalStorageItems","then","currentEvents","updatedEvents","filter","event","localStorage","setItem","JSON","stringify","injectIntl","removeUser","label","formatMessage","intl","react_default","onClick","aria-label","src","alt","lib_default","REMOVE_USER","updateFreeUsers","addedUsers","currentTime","editing","freeUsers","user","some","addedUser","busyTime","length","every","isUserFree","UPDATE_FREE_USERS","payload","checkForParticipantsError","usersNumber","PARTICIPANTS_ERROR","isError","checkForNameError","visitors","CAPACITY_ERROR","Participators","renderParticipators","_this$props","_this","props","participators","map","ui_ParticipatorCard","key","_this$props2","this","_this$props3","roomIsSelected","checkForCapacityError","Component","mapDispatchToProps","connect","state","usersReducer","eventsReducer","currentEvent","pageReducer","editEventModalOpen","setFocused","focused","SET_FOCUSED","Input","objectWithoutProperties","changeIndex","newIndex","CHANGE_INDEX","onInputValueChange","newValue","CHANGE_INPUT_VALUE","addUser","ADD_USER","AutoCompleteInput","resetIndex","handleEnter","foundUsers","highlightedIndex","handleArrowUp","scrollbar","scrollTop","scrollToBottom","handleArrowDown","scrollToTop","listenToKeypresses","e","preventDefault","target","blur","onChange","value","_this$props4","placeholder","activeId","inputValue","isAllErrorsShown","ui_Input","onKeyDown","aria-autocomplete","aria-activedescendant","onFocus","dropdownReducer","errorReducer","DropdownOption","avatarSrc","highlighted","getScrollbar","scrollbarNode","GET_SCROLLBAR","AutoCompleteMenu","renderItems","index","isHighlighted","ui_DropdownOption","scrollbarTrackVertical","style","trackStyles","noScrollbar","display","height","backgroundColor","width","right","top","boxSizing","paddingBottom","objectSpread","scrollbarThumb","_ref2","thumbStyles","borderRadius","marginTop","marginLeft","scrollbars","_this2","aria-selected","react_custom_scrollbars_lib_default","autoHeight","autoHeightMax","renderThumbVertical","renderTrackVertical","hideTracksWhenNotNeeded","ref","s","AutoComplete","findUsers","toLowerCase","includes","trim","handleClickOutside","role","aria-expanded","aria-haspopup","connected_AutoCompleteInput","connected_AutoCompleteMenu","onClickOutside","ErrorText","message","react","ui_ErrorText","addLabel","AddLabel","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","enableUniqueIds","assertThisInitialized","inherits","createClass","htmlFor","nextUniqueId","lastUniqueId","React","componentName","getDisplayName","displayName","parti—ÅipantsError","capacityError","roomsReducer","participantsErrorText","capacityErrorText","HandleErrors","connected_AutoComplete","connected_Participators","LargeHeadline","changeValue","CHANGE_VALUE","UpgradedInput","input","createRef","focus","current","DateSetterInput","now","Date","modifiersStyles","highlightedDate","color","day","_this2$props","monthsValue","getDate","getMonth","locale","months","daysShort","labels","firstDay","modifiers","getFullYear","DayPickerInput_default","component","dayPickerProps","onDayClick","weekdaysShort","firstDayOfWeek","disabledDays","before","fromMonth","inputProps","dateReducer","TimeInput","triggerFocus","setState","prevState","handleHoursChange","increaseHours","decreaseHours","handleMinutesChange","increaseMinutes","decreaseMinutes","onHoursChange","onMinutesChange","hours","minutes","timeError","limitError","onBlur","updateTime","subject","resetTime","increaseTime","timeStr","lowBorder","highBorder","step","Number","toString","decreaseTime","checkForTimeError","_allFieldsToNumber","obj","newObj","keys","forEach","allFieldsToNumber","TIME_ERROR","checkForLimitError","lowerLimit","LIMIT_ERROR","TimeSetter","onChangeTime","maximumValue","isNaN","startLabel","endLabel","connected_TimeInput","UPDATE_STARTING_HOURS","UPDATE_STARTING_MINUTES","UPDATE_ENDING_HOURS","UPDATE_ENDING_MINUTES","DateAndTime","containerStyles","dateLabel","connected_DateSetterInput","connected_TimeSetter","freeTime","roomName","floorNumber","onCardSelect","onCardDeselect","roomInfo","setRoom","SET_ROOM","checkForRoomError","ROOM_ERROR","RoomCards","getThisRoomEventsTime","currentEventId","events","elem","sortEventsByTime","pivot","Math","random","less","greater","toConsumableArray","getConditions","startingHours1","startingMinutes1","startingHours2","startingMinutes2","endingHours1","endingMinutes1","endingHours2","endingMinutes2","getFreeTime","currentEventTime","openTime","closeTime","thisRoomEvents","sortedTimeArr","i","isEventFirst","isEventLast","isEventMidst","undefined","renderSelectedRoom","selectedRoom","find","ui_RoomCard","stopPropagation","getRoomsToRender","currentEventUsers","neededRooms","floors","compared","equalToCompared","sortRooms","sortedFloors","sort","highestOccurence","count","newCount","neededFloor","renderRooms","_this$props5","roomsToRender","overallRooms","_this$props6","_this$props7","roomError","selectedHeadline","unselectedHeadline","errorMessage","tabIndex","addLocalStorageEvent","newEvent","createEvent","dispatch","ADD_EVENT","createEventActionCreator","triggerModal","TRIGGER_SUCCESS_MODAL","updateLocalStorageEvent","Promise","res","deleteLocalStorageEvent","editEvent","updatedEvent","EDIT_EVENT","editEventActionCreator","showAllErrors","SHOW_ERRORS","addUserBusyTime","updatedUsers","updatedUser","newUsers","updateUserBusyTime","UPDATE_USER_BUSY_TIME","updateUserBusyTimeActionCreator","BottomBtns","checkForErrors","nameError","handleCreate","TRIGGER_CREATE_MODAL","handleEdit","TRIGGER_EDIT_MODAL","onCancel","onDelete","edit","breakpoint","cancelBtnText","deleteBtnText","saveBtnText","createBtnText","window","innerWidth","SubmitBtn","text","mobileBreakpoint","DeleteBtn","mobileDeleteBtnStyles","textAlign","fontFamily","fontWeight","fontSize","cursor","border","transition","outline",":focus,:active","setEventName","CHANGE_EVENT_NAME","NAME_ERROR","EventNameSetter","handleChange","eventName","errorText","Meeting","closeModal","handleDelete","TRIGGER_DELETE_MODAL","title","nameSetterPlaceholder","nameSetterLabel","dropdownPlaceholder","dropdownLabel","react_focus_trap_default","ui_LargeHeadline","connected_EventNameSetter","connected_DateAndTime","CloseBtn","connected_Dropdown","connected_RoomCards","ui_DeleteBtn_DeleteBtn","connected_BottomBtns"],"mappings":"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","file":"static/js/2.c9188393.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const userShape = PropTypes.shape({\r\n  login: PropTypes.string.isRequired,\r\n  avatarUrl: PropTypes.string.isRequired,\r\n  homeFloor: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const usersShape = PropTypes.arrayOf(userShape);\r\n\r\nexport const roomShape = PropTypes.shape({\r\n  name: PropTypes.string,\r\n  floor: PropTypes.number,\r\n  maxVisitors: PropTypes.number,\r\n  selected: PropTypes.bool,\r\n});\r\n\r\nexport const roomsShape = PropTypes.arrayOf(roomShape);\r\n\r\nexport const dateShape = PropTypes.shape({\r\n  startingDate: PropTypes.number.isRequired,\r\n  startingMonth: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const timeShape = PropTypes.shape({\r\n  startingHours: PropTypes.string.isRequired,\r\n  endingHours: PropTypes.string.isRequired,\r\n  startingMinutes: PropTypes.string.isRequired,\r\n  endingMinutes: PropTypes.string.isRequired,\r\n});\r\n\r\nexport const eventShape = PropTypes.shape({\r\n  name: PropTypes.string.isRequired,\r\n  users: PropTypes.arrayOf(userShape).isRequired,\r\n  room: roomShape.isRequired,\r\n  date: dateShape.isRequired,\r\n  time: timeShape.isRequired,\r\n  id: PropTypes.string,\r\n});\r\n\r\nexport const eventsShape = PropTypes.arrayOf(eventShape);\r\n\r\n\r\nexport const timeStripeArrayShape = PropTypes.arrayOf(PropTypes.number);\r\n\r\nexport const rearrangedRoomShape = PropTypes.shape({\r\n  floor: PropTypes.number.isRequired,\r\n  rooms: PropTypes.arrayOf(roomShape),\r\n});\r\n\r\nexport const rearrangedRoomsShape = PropTypes.arrayOf(rearrangedRoomShape);\r\n\r\nexport const workingTimeShape = PropTypes.objectOf(PropTypes.string);\n","import React from 'react';\nimport './Headline.scss';\n\nconst Headline = ({ className, children, ...otherProps }) => (\n  <h2 className={`headline ${className}`} {...otherProps}>{children}</h2>\n);\n\nexport default Headline;\n","import React from 'react';\nimport './Paragraph.scss';\n\nconst Paragraph = ({ className, children, ...otherProps }) => (\n  <p className={`paragraph ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default Paragraph;\n","import { RESET_VALUES } from '../../consts/eventsReducer';\n\nconst resetValues = () => ({\n  type: RESET_VALUES,\n});\n\nexport default resetValues;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RoundBtn.scss';\n\nconst RoundBtn = ({ className, children, ...otherProps }) => (\n  <button className={`round-btn ${className}`} {...otherProps}>{children}</button>\n);\n\nRoundBtn.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]).isRequired,\n  className: PropTypes.string,\n};\n\nRoundBtn.defaultProps = {\n  className: '',\n};\n\nexport default RoundBtn;\n","import React from 'react';\nimport './GreyParagraph.scss';\n\nconst GreyParagraph = ({ className, children, ...otherProps }) => (\n  <p className={`grey-paragraph ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default GreyParagraph;\n","import { UPDATE_DATE } from '../../consts/eventsReducer';\n\nconst updateDate = (month, date) => ({\n  type: UPDATE_DATE,\n  month,\n  date,\n});\n\nexport default updateDate;\n","import { TRIGGER_ROOM } from '../../consts/roomsReducer';\n\nconst triggerSelected = id => ({\n  type: TRIGGER_ROOM,\n  id,\n});\n\nexport default triggerSelected;\n","import { RESET_ROOM } from '../../consts/eventsReducer';\n\nconst resetRoom = () => ({\n  type: RESET_ROOM,\n});\n\nexport default resetRoom;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GreyBtn.scss';\n\nconst GreyBtn = ({ children, className, ...otherProps }) => (\n  <button className={`grey-btn ${className}`} {...otherProps}>{children}</button>\n);\n\nGreyBtn.propTypes = {\n  children: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nGreyBtn.defaultProps = {\n  className: '',\n};\n\nexport default GreyBtn;\n","import getLocalStorageItems from './getLocalStorageItems';\r\n\r\nconst deleteLocalstorageEvent = (id) => {\r\n  getLocalStorageItems('events')\r\n    .then((currentEvents) => {\r\n      const updatedEvents = currentEvents.filter(event => event.id !== id);\r\n\r\n      localStorage.setItem('events', JSON.stringify(updatedEvents));\r\n    });\r\n};\r\n\r\nexport default deleteLocalstorageEvent;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Paragraph from '../Paragraph';\nimport './ParticipatorCard.scss';\n\nconst ParticipatorCard = ({\n  avatarUrl,\n  name,\n  removeUser,\n  intl: {\n    formatMessage,\n  },\n}) => {\n  const label = formatMessage({ id: 'participatorCard.label' }, { name });\n\n  return (\n    <button\n      className=\"participator-card\"\n      onClick={removeUser}\n      aria-label={label}\n    >\n      <div className=\"particitapor-card__image-container\">\n        <img className=\"participator-card__avatar\" src={avatarUrl} alt={`${name}'s avatar`} />\n      </div>\n      <Paragraph className=\"participator-card__paragraph\">{name}</Paragraph>\n      <div className=\"participator-card__close-icon\">\n        <FontAwesome\n          name=\"times\"\n        />\n      </div>\n    </button>\n  );\n};\n\n\nParticipatorCard.propTypes = {\n  intl: intlShape.isRequired,\n  avatarUrl: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  removeUser: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(ParticipatorCard);\n","import { REMOVE_USER } from '../../consts/eventsReducer';\n\nconst removeUser = id => ({\n  type: REMOVE_USER,\n  id,\n});\n\nexport default removeUser;\n","import { UPDATE_FREE_USERS } from '../../consts/dropdownReducer';\r\n\r\nconst updateFreeUsers = (users, addedUsers, currentTime, editing) => {\r\n  const notAddedUsers = users.filter(user => !addedUsers.some(addedUser => (\r\n    user.id === addedUser.id\r\n  )));\r\n\r\n  const freeUsers = notAddedUsers.filter((user) => {\r\n    if (user.busyTime.length > 0) {\r\n      const isUserFree = ({ startingHours, startingMinutes, endingHours, endingMinutes }) => (\r\n        (endingHours <= currentTime.startingHours\r\n        && endingMinutes <= currentTime.startingMinutes)\r\n        || (startingHours >= currentTime.endingHours\r\n        && startingMinutes >= currentTime.endingMinutes)\r\n      );\r\n\r\n      return user.busyTime.every((time) => {\r\n        if (editing) {\r\n          return true; // It should let user re-select selected participators while editing\r\n        }\r\n\r\n        return isUserFree(time);\r\n      });\r\n    }\r\n\r\n    return true; // User is not added in any event\r\n  });\r\n\r\n  return {\r\n    type: UPDATE_FREE_USERS,\r\n    payload: freeUsers,\r\n  };\r\n};\r\n\r\nexport default updateFreeUsers;\r\n","import { PARTICIPANTS_ERROR } from '../../consts/errorReducer';\n\nconst checkForParticipantsError = usersNumber => ({\n  type: PARTICIPANTS_ERROR,\n  isError: usersNumber < 2,\n});\n\nexport default checkForParticipantsError;\n","import { CAPACITY_ERROR } from '../../consts/errorReducer';\n\nconst checkForNameError = (visitors, maxVisitors) => ({\n  type: CAPACITY_ERROR,\n  isError: visitors > maxVisitors,\n});\n\nexport default checkForNameError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ParticipatorCard from '../../ui/ParticipatorCard';\nimport removeUser from '../../../action-creators/eventsReducer/removeUser';\nimport updateFreeUsers from '../../../action-creators/dropdownReducer/updateFreeUsers';\nimport checkForParticipantsError from '../../../action-creators/errorReducer/checkForParticipantsError';\nimport checkForCapacityError from '../../../action-creators/errorReducer/checkForCapacityError';\nimport { usersShape, timeShape } from '../../../intl/shapes';\n\nclass Participators extends Component {\n  static propTypes = {\n    users: usersShape.isRequired,\n    participators: usersShape.isRequired,\n    removeUser: PropTypes.func.isRequired,\n    updateFreeUsers: PropTypes.func.isRequired,\n    checkForParticipantsError: PropTypes.func.isRequired,\n    checkForCapacityError: PropTypes.func.isRequired,\n    roomIsSelected: PropTypes.bool.isRequired,\n    maxVisitors: PropTypes.number,\n    currentTime: timeShape,\n    editing: PropTypes.bool.isRequired,\n  }\n\n  componentDidMount() {\n    const {\n      updateFreeUsers, users, participators, currentTime, editing,\n    } = this.props;\n\n    updateFreeUsers(users, participators, currentTime, editing);\n  }\n\n  componentDidUpdate() {\n    const {\n      checkForParticipantsError,\n      roomIsSelected,\n      checkForCapacityError,\n      participators,\n      maxVisitors,\n      updateFreeUsers,\n      users,\n      currentTime,\n      editing,\n    } = this.props;\n    // –ù–ï –¢–ï participators\n    updateFreeUsers(users, participators, currentTime, editing);\n\n    checkForParticipantsError(participators.length);\n\n    if (roomIsSelected) {\n      checkForCapacityError(participators.length, maxVisitors);\n    }\n  }\n\n  renderParticipators = () => {\n    const { participators, removeUser } = this.props;\n\n    return participators.map(user => (\n      <ParticipatorCard\n        key={user.id}\n        name={user.login}\n        avatarUrl={user.avatarUrl}\n        removeUser={() => {\n          removeUser(user.id);\n        }}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderParticipators()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.usersReducer.users,\n  participators: state.eventsReducer.currentEvent.users,\n  currentTime: state.eventsReducer.currentEvent.time,\n  editing: state.pageReducer.editEventModalOpen,\n});\n\nconst mapDispatchToProps = {\n  updateFreeUsers,\n  removeUser,\n  checkForParticipantsError,\n  checkForCapacityError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Participators);\n","import { SET_FOCUSED } from '../../consts/dropdownReducer';\r\n\r\nconst setFocused = focused => ({\r\n  type: SET_FOCUSED,\r\n  payload: focused,\r\n});\r\n\r\nexport default setFocused;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Index.scss';\n\n/*  eslint-disable react/prefer-stateless-function */\n// DateSetterComponent makes use of ref with this component\n\nclass Input extends Component {\n  static propTypes = {\n    isError: PropTypes.bool,\n    className: PropTypes.string,\n  }\n\n  static defaultProps = {\n    isError: false,\n    className: '',\n  }\n\n  render() {\n    const { isError, className, ...otherProps } = this.props;\n\n    return (\n      <input\n        type=\"text\"\n        className={`input ${isError ? 'input--error' : ''} ${className}`}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import { CHANGE_INDEX } from '../../consts/dropdownReducer';\r\n\r\nconst changeIndex = newIndex => ({\r\n  type: CHANGE_INDEX,\r\n  payload: newIndex,\r\n});\r\n\r\nexport default changeIndex;\n","import { CHANGE_INPUT_VALUE } from '../../consts/dropdownReducer';\r\n\r\nconst onInputValueChange = newValue => ({\r\n  type: CHANGE_INPUT_VALUE,\r\n  payload: newValue,\r\n});\r\n\r\nexport default onInputValueChange;\n","import { ADD_USER } from '../../consts/eventsReducer';\n\nconst addUser = user => ({\n  type: ADD_USER,\n  payload: user,\n});\n\nexport default addUser;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Input from '../../ui/Input';\r\nimport setFocused from '../../../action-creators/dropdownReducer/setFocused';\r\nimport changeIndex from '../../../action-creators/dropdownReducer/changeIndex';\r\nimport onInputValueChange from '../../../action-creators/dropdownReducer/onInputValueChange';\r\nimport { usersShape } from '../../../intl/shapes';\r\nimport addUser from '../../../action-creators/eventsReducer/addUser';\r\n\r\nclass AutoCompleteInput extends Component {\r\n  static propTypes = {\r\n    placeholder: PropTypes.string,\r\n    activeId: PropTypes.string.isRequired,\r\n    isError: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number, // 1 or 0\r\n    ]).isRequired,\r\n    setFocused: PropTypes.func.isRequired,\r\n    highlightedIndex: PropTypes.number.isRequired,\r\n    scrollbar: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\r\n    addUser: PropTypes.func.isRequired,\r\n    onInputValueChange: PropTypes.func.isRequired,\r\n    inputValue: PropTypes.string.isRequired,\r\n    changeIndex: PropTypes.func.isRequired,\r\n    isAllErrorsShown: PropTypes.bool.isRequired,\r\n    foundUsers: usersShape.isRequired,\r\n  }\r\n\r\n  static defaultProps = {\r\n    placeholder: '',\r\n  }\r\n\r\n  resetIndex = () => {\r\n    const { changeIndex } = this.props;\r\n\r\n    changeIndex(0);\r\n  }\r\n\r\n  handleEnter = () => {\r\n    const { addUser, foundUsers, highlightedIndex } = this.props;\r\n\r\n    if (foundUsers.length !== 0) {\r\n      addUser(foundUsers[highlightedIndex]);\r\n\r\n      if (foundUsers.length - 1 === highlightedIndex) {\r\n        this.resetIndex();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleArrowUp = () => {\r\n    const {\r\n      foundUsers, highlightedIndex, changeIndex, scrollbar,\r\n    } = this.props;\r\n\r\n    if (highlightedIndex > 0) {\r\n      changeIndex(highlightedIndex - 1);\r\n      scrollbar.scrollTop(35 * (highlightedIndex - 1));\r\n    } else {\r\n      changeIndex(foundUsers.length - 1);\r\n      scrollbar.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  handleArrowDown = () => {\r\n    const {\r\n      foundUsers, highlightedIndex, changeIndex, scrollbar,\r\n    } = this.props;\r\n\r\n    if (highlightedIndex <= foundUsers.length - 2) {\r\n      changeIndex(highlightedIndex + 1);\r\n      scrollbar.scrollTop(35 * highlightedIndex);\r\n    } else {\r\n      this.resetIndex();\r\n      scrollbar.scrollToTop();\r\n    }\r\n  }\r\n\r\n  listenToKeypresses = (e) => {\r\n    const { setFocused } = this.props;\r\n\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        e.preventDefault();\r\n        this.handleEnter();\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n        e.preventDefault();\r\n        this.handleArrowUp();\r\n        break;\r\n\r\n      case 'ArrowDown':\r\n        e.preventDefault();\r\n        this.handleArrowDown();\r\n        break;\r\n\r\n      case 'Escape':\r\n        e.preventDefault();\r\n        e.target.blur();\r\n        setFocused();\r\n        break;\r\n\r\n      case 'Tab':\r\n        setFocused();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { onInputValueChange } = this.props;\r\n\r\n    this.resetIndex();\r\n    e.preventDefault();\r\n    onInputValueChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      placeholder, activeId, isError, setFocused, inputValue, isAllErrorsShown,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Input\r\n        onChange={this.onChange}\r\n        value={inputValue}\r\n        onKeyDown={this.listenToKeypresses}\r\n        placeholder={placeholder}\r\n        aria-autocomplete=\"both\"\r\n        aria-activedescendant={activeId}\r\n        isError={isError && isAllErrorsShown}\r\n        onFocus={() => setFocused(true)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  highlightedIndex: state.dropdownReducer.highlightedIndex,\r\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\r\n  inputValue: state.dropdownReducer.inputValue,\r\n  activeId: state.dropdownReducer.activeId,\r\n  scrollbar: state.dropdownReducer.scrollbar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setFocused,\r\n  changeIndex,\r\n  onInputValueChange,\r\n  addUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoCompleteInput);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paragarph from '../Paragraph';\nimport GreyParagraph from '../GreyParagraph';\nimport './DropdownOption.scss';\n\nconst DropdownOption = ({ name, avatarSrc, homeFloor, highlighted, id, onClick }) => (\n  <div\n    className={`dropdown-option ${highlighted ? 'dropdown-option__active' : ''}`}\n    id={id}\n    onClick={onClick}\n  >\n    <div className=\"dropdown-option__image-container\">\n      <img className=\"dropdown-option__avatar\" src={avatarSrc} alt={`${name}`} />\n    </div>\n    <Paragarph\n      className={`dropdown-option__paragraph ${highlighted ? 'dropdown-option__highlighted' : ''}`}\n    >\n      {name}\n      {' '}\n      ¬∑&#160;\n    </Paragarph>\n\n    <GreyParagraph\n      className={`dropdown-option__grey-paragraph ${highlighted ? 'dropdown-option__highlighted' : ''}`}\n    >\n      <span className=\"dropdown-option__floor-number\">{homeFloor}</span>\n      {' '}\n      —ç—Ç–∞–∂\n    </GreyParagraph>\n  </div>\n);\n\nDropdownOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatarSrc: PropTypes.string.isRequired,\n  homeFloor: PropTypes.number.isRequired,\n  highlighted: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  id: PropTypes.string,\n};\n\nDropdownOption.defaultProps = {\n  id: '',\n};\n\nexport default DropdownOption;\n","import { GET_SCROLLBAR } from '../../consts/dropdownReducer';\r\n\r\nconst getScrollbar = scrollbarNode => ({\r\n  type: GET_SCROLLBAR,\r\n  payload: scrollbarNode,\r\n});\r\n\r\nexport default getScrollbar;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Scrollbar from 'react-custom-scrollbars';\r\nimport PropTypes from 'prop-types';\r\nimport DropdownOption from '../../ui/DropdownOption';\r\nimport getScrollbar from '../../../action-creators/dropdownReducer/getScrollbar';\r\nimport './AutoCompleteMenu.scss';\r\nimport addUser from '../../../action-creators/eventsReducer/addUser';\r\nimport { usersShape } from '../../../intl/shapes';\r\n\r\nclass AutoCompleteMenu extends Component {\r\n  static propTypes = {\r\n    addUser: PropTypes.func.isRequired,\r\n    getScrollbar: PropTypes.func.isRequired,\r\n    foundUsers: usersShape.isRequired,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getScrollbar } = this.props;\r\n\r\n    getScrollbar(this.scrollbars);\r\n  }\r\n\r\n  renderItems = () => {\r\n    const { foundUsers, highlightedIndex, addUser, activeId } = this.props;\r\n\r\n    return foundUsers.map((user, index) => {\r\n      const isHighlighted = highlightedIndex === index;\r\n      const onClick = () => addUser(user);\r\n\r\n      return (\r\n        <DropdownOption\r\n          key={user.id}\r\n          name={user.login}\r\n          homeFloor={user.homeFloor}\r\n          avatarSrc={user.avatarUrl}\r\n          highlighted={isHighlighted}\r\n          onClick={onClick}\r\n          id={isHighlighted ? activeId : null}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  scrollbarTrackVertical = ({ style, props }) => {\r\n    const { noScrollbar } = this.props;\r\n\r\n    const trackStyles = !noScrollbar\r\n      ? {\r\n        display: 'inline-block',\r\n        height: '100%',\r\n        backgroundColor: '#ffffff',\r\n        width: '22px',\r\n        right: '0px',\r\n        top: '0px',\r\n        boxSizing: 'border-box',\r\n        paddingBottom: '10px',\r\n      }\r\n      : { display: 'none' };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...style,\r\n          ...trackStyles,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n\r\n  scrollbarThumb = ({ style, props }) => {\r\n    const { noScrollbar } = this.props;\r\n\r\n    const thumbStyles = !noScrollbar\r\n      ? {\r\n        width: '11px',\r\n        backgroundColor: '#d5dfe9',\r\n        borderRadius: '5px',\r\n        marginTop: '5px',\r\n        marginLeft: '5px',\r\n      }\r\n      : { display: 'none' };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...style,\r\n          ...thumbStyles,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"autocomplete__menu\"\r\n        aria-selected=\"true\"\r\n      >\r\n        <Scrollbar\r\n          autoHeight\r\n          autoHeightMax={140}\r\n          renderThumbVertical={this.scrollbarThumb}\r\n          renderTrackVertical={this.scrollbarTrackVertical}\r\n          hideTracksWhenNotNeeded\r\n          ref={(s) => { this.scrollbars = s; }}\r\n        >\r\n          {\r\n            this.renderItems()\r\n          }\r\n        </Scrollbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  activeId: state.dropdownReducer.activeId,\r\n  freeUsers: state.dropdownReducer.freeUsers,\r\n  highlightedIndex: state.dropdownReducer.highlightedIndex,\r\n  inputValue: state.dropdownReducer.inputValue,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getScrollbar,\r\n  addUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoCompleteMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, intlShape } from 'react-intl';\r\nimport PropTypes from 'prop-types';\r\nimport onClickOutside from 'react-onclickoutside';\r\nimport setFocused from '../../../action-creators/dropdownReducer/setFocused';\r\nimport Input from '../AutoCompleteInput';\r\nimport Menu from '../AutoCompleteMenu';\r\nimport './AutoComplete.scss';\r\nimport { usersShape } from '../../../intl/shapes';\r\n\r\nclass AutoComplete extends Component {\r\n  static propTypes = {\r\n    intl: intlShape.isRequired,\r\n    focused: PropTypes.bool.isRequired,\r\n    isError: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number, // 1 or 0\r\n    ]).isRequired,\r\n    setFocused: PropTypes.func.isRequired,\r\n    freeUsers: usersShape.isRequired,\r\n    inputValue: PropTypes.string.isRequired,\r\n  }\r\n\r\n  findUsers = () => {\r\n    const { freeUsers, inputValue } = this.props;\r\n    const isItemMatching = (login, value) => login.toLowerCase().includes(\r\n      value.trim().toLowerCase(),\r\n    );\r\n\r\n    return freeUsers.filter(user => isItemMatching(user.login, inputValue));\r\n  }\r\n\r\n  handleClickOutside = () => {\r\n    const { focused, setFocused } = this.props;\r\n\r\n    if (focused) {\r\n      setFocused(false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { focused, intl: { formatMessage }, isError } = this.props;\r\n    const placeholder = formatMessage({ id: 'meeting.dropdown.placeholder' });\r\n    const foundUsers = this.findUsers();\r\n\r\n    return (\r\n      <div\r\n        className=\"autocomplete\"\r\n        role=\"combobox\" // eslint-disable-line jsx-a11y/role-has-required-aria-props\r\n        aria-expanded={focused}\r\n        aria-haspopup=\"listbox\"\r\n      >\r\n        <Input\r\n          focused={focused}\r\n          placeholder={placeholder}\r\n          isError={isError}\r\n          foundUsers={foundUsers}\r\n        />\r\n\r\n        {focused\r\n          && <Menu foundUsers={foundUsers} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  focused: state.dropdownReducer.focused,\r\n  freeUsers: state.dropdownReducer.freeUsers,\r\n  inputValue: state.dropdownReducer.inputValue,\r\n  currentTime: state.eventsReducer.currentEvent.time,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setFocused,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(injectIntl(onClickOutside(AutoComplete)));\r\n","import React from 'react';\nimport './ErrorText.scss';\n\nconst ErrorText = ({ className, children, ...otherProps }) => (\n  <p className={`error-text ${className}`} {...otherProps}>{children}</p>\n);\n\nexport default ErrorText;\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ErrorText from '../../ui/ErrorText';\r\n\r\nconst HandleError = ({ isError, message, isAllErrorsShown }) => (\r\n  <Fragment>\r\n    {isError && isAllErrorsShown\r\n      && (\r\n      <ErrorText>\r\n        {message}\r\n      </ErrorText>\r\n      )\r\n    }\r\n  </Fragment>\r\n);\r\n\r\nHandleError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  isError: PropTypes.bool.isRequired,\r\n  isAllErrorsShown: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\r\n});\r\n\r\nexport default connect(mapStateToProps)(HandleError);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { enableUniqueIds } from 'react-html-id';\r\nimport Headline from '../../ui/Headline';\r\nimport getDisplayName from '../getDisplayName';\r\nimport './addLabel.scss';\r\n\r\nconst addLabel = (Component) => {\r\n  class AddLabel extends React.Component {\r\n    static propTypes = {\r\n      className: PropTypes.string,\r\n      label: PropTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n      className: '',\r\n      label: '',\r\n    }\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      enableUniqueIds(this);\r\n    }\r\n\r\n    render() {\r\n      const { className, label, ...otherProps } = this.props;\r\n\r\n      /* eslint-disable jsx-a11y/label-has-for */\r\n\r\n      return (\r\n        <div className={className}>\r\n          <label htmlFor={this.nextUniqueId()}>\r\n            <Headline className=\"label__headline\">{label}</Headline>\r\n          </label>\r\n\r\n          <Component {...otherProps} id={this.lastUniqueId()} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const componentName = getDisplayName(AddLabel);\r\n\r\n  AddLabel.displayName = `AddLabel(${componentName})`;\r\n\r\n  return AddLabel;\r\n};\r\n\r\nexport default addLabel;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Participators from '../Participators';\nimport AutoComplete from '../AutoComplete';\nimport HandleErrors from '../HandleErrors';\nimport addLabel from '../../HOC/addLabel';\n\nconst Dropdown = ({\n  parti—ÅipantsError,\n  capacityError,\n  maxVisitors,\n  intl: { formatMessage },\n  roomIsSelected,\n}) => {\n  const participantsErrorText = formatMessage({ id: 'meeting.dropdown.participantsErrorText' });\n  const capacityErrorText = formatMessage({\n    id: 'meeting.dropdown.capacityErrorText',\n  }, { maxVisitors });\n\n  return (\n    <div>\n      <HandleErrors\n        message={participantsErrorText}\n        isError={parti—ÅipantsError}\n      />\n\n      <HandleErrors\n        message={capacityErrorText}\n        isError={capacityError && roomIsSelected}\n      />\n\n      <AutoComplete\n        isError={capacityError && (roomIsSelected || parti—ÅipantsError)}\n      />\n\n      <Participators\n        maxVisitors={maxVisitors}\n        roomIsSelected={roomIsSelected}\n      />\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  intl: intlShape.isRequired,\n  parti—ÅipantsError: PropTypes.bool.isRequired,\n  capacityError: PropTypes.bool.isRequired,\n  roomIsSelected: PropTypes.bool.isRequired,\n  maxVisitors: PropTypes.number,\n};\n\nconst mapStateToProps = state => ({\n  parti—ÅipantsError: state.errorReducer.parti—ÅipantsError,\n  capacityError: state.errorReducer.capacityError,\n  roomIsSelected: state.roomsReducer.roomIsSelected,\n  maxVisitors: state.eventsReducer.currentEvent.room.maxVisitors,\n});\n\nconst ConnectedComponent = connect(mapStateToProps)(injectIntl(Dropdown));\n\nexport default addLabel(ConnectedComponent);\n","import React from 'react';\nimport './LargeHeadline.scss';\n\nconst LargeHeadline = ({ className, children, ...otherProps }) => (\n  <h1 className={`large-headline ${className}`} {...otherProps}>{children}</h1>\n);\n\nexport default LargeHeadline;\n","import { CHANGE_VALUE } from '../../consts/dateReducer';\r\n\r\nconst changeValue = (month, date) => ({\r\n  type: CHANGE_VALUE,\r\n  month,\r\n  date,\r\n});\r\n\r\nexport default changeValue;\n","import React, { Component, createRef } from 'react';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../../ui/Input';\nimport updateDate from '../../../action-creators/eventsReducer/updateDate';\nimport changeValue from '../../../action-creators/dateReducer/changeValue';\nimport { dateShape } from '../../../intl/shapes';\nimport addLabel from '../../HOC/addLabel';\n\nclass UpgradedInput extends Component {\n  input = createRef()\n\n  focus = () => {\n    this.input.current.focus();\n  }\n\n  render() {\n    return <Input ref={this.input} {...this.props} />;\n  }\n}\n\nclass DateSetterInput extends Component {\n  static propTypes = {\n    date: dateShape.isRequired,\n    id: PropTypes.string.isRequired,\n    updateDate: PropTypes.func.isRequired,\n    changeValue: PropTypes.func.isRequired,\n    monthsValue: PropTypes.arrayOf(PropTypes.string).isRequired,\n    locale: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    firstDay: PropTypes.number.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    daysShort: PropTypes.arrayOf(PropTypes.string).isRequired,\n    labels: PropTypes.objectOf(PropTypes.string).isRequired,\n  }\n\n  now = new Date()\n\n  modifiersStyles = {\n    highlightedDate: {\n      color: '#fff',\n      backgroundColor: '#55a8fe',\n      borderRadius: '50%',\n    },\n  }\n\n  updateDate = (day) => {\n    const { monthsValue, updateDate, changeValue } = this.props;\n\n    const date = day.getDate();\n    const month = day.getMonth();\n\n    updateDate(month, date);\n    changeValue(monthsValue[month], date);\n  }\n\n  render() {\n    const {\n      date, id, locale, months, daysShort, labels, firstDay, value,\n    } = this.props;\n\n    const modifiers = {\n      highlightedDate: new Date(this.now.getFullYear(), date.startingMonth, date.startingDate),\n    };\n\n    return (\n      <DayPickerInput\n        component={UpgradedInput}\n        id={id}\n        value={value}\n        dayPickerProps={{\n          locale,\n          months,\n          labels,\n          onDayClick: this.updateDate,\n          weekdaysShort: daysShort,\n          firstDayOfWeek: firstDay,\n          modifiers,\n          modifiersStyles: this.modifiersStyles,\n          disabledDays: [{\n            before: this.now,\n          }],\n          fromMonth: this.now,\n        }}\n        inputProps={{\n          onChange: (e) => {\n            e.target.value = value;\n          },\n          placeholder: '',\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  date: state.eventsReducer.currentEvent.date,\n  locale: state.dateReducer.locale,\n  value: state.dateReducer.value,\n  labels: state.dateReducer.labels,\n  monthsValue: state.dateReducer.monthsValue,\n  months: state.dateReducer.months,\n  daysShort: state.dateReducer.daysShort,\n  firstDay: state.dateReducer.firstDay,\n});\n\nconst mapDispatchToProps = {\n  updateDate,\n  changeValue,\n};\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(DateSetterInput);\n\nexport default addLabel(ConnectedComponent);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport addLabel from '../../HOC/addLabel';\nimport './TimeInput.scss';\n\nclass TimeInput extends Component {\n  state = {\n    focused: false,\n  }\n\n  static propTypes = {\n    onHoursChange: PropTypes.func.isRequired,\n    onMinutesChange: PropTypes.func.isRequired,\n    hours: PropTypes.string.isRequired,\n    minutes: PropTypes.string.isRequired,\n    increaseHours: PropTypes.func.isRequired,\n    increaseMinutes: PropTypes.func.isRequired,\n    decreaseHours: PropTypes.func.isRequired,\n    decreaseMinutes: PropTypes.func.isRequired,\n    limitError: PropTypes.bool.isRequired,\n    timeError: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number, // 1 or 0\n    ]).isRequired,\n    isAllErrorsShown: PropTypes.bool.isRequired,\n  }\n\n  triggerFocus = () => {\n    this.setState(prevState => ({\n      focused: !prevState.focused,\n    }));\n  }\n\n  handleHoursChange = (e) => {\n    const { increaseHours, decreaseHours } = this.props;\n\n    if (e.key === 'ArrowUp') {\n      increaseHours();\n    } else if (e.key === 'ArrowDown') {\n      decreaseHours();\n    }\n  }\n\n  handleMinutesChange = (e) => {\n    const { increaseMinutes, decreaseMinutes } = this.props;\n\n    if (e.key === 'ArrowUp') {\n      increaseMinutes();\n    } else if (e.key === 'ArrowDown') {\n      decreaseMinutes();\n    }\n  }\n\n  render() {\n    const\n      {\n        onHoursChange,\n        onMinutesChange,\n        hours,\n        minutes,\n        timeError,\n        limitError,\n        isAllErrorsShown,\n      } = this.props;\n\n    const { focused } = this.state;\n    const isError = (timeError || limitError) && isAllErrorsShown;\n\n    return (\n      <div\n        className={`\n          time-input \n          ${focused ? 'time-input--focused' : ''} \n          ${isError ? 'time-input--error' : ''}\n        `}\n      >\n        <input\n          type=\"text\"\n          value={hours}\n          onChange={onHoursChange}\n          className=\"time-input__invisible-input\"\n          onFocus={this.triggerFocus}\n          onBlur={this.triggerFocus}\n          onKeyDown={this.handleHoursChange}\n        />\n\n        <span className=\"time-input__colon\">:</span>\n\n        <input\n          type=\"text\"\n          value={minutes}\n          onChange={onMinutesChange}\n          className=\"time-input__invisible-input\"\n          onFocus={this.triggerFocus}\n          onBlur={this.triggerFocus}\n          onKeyDown={this.handleMinutesChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  timeError: state.errorReducer.timeError,\n  limitError: state.errorReducer.limitError,\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\n});\n\nconst ConnectedComponent = connect(mapStateToProps)(TimeInput);\n\nexport default addLabel(ConnectedComponent);\n","const updateTime = (value, subject) => ({\n  type: subject,\n  payload: value,\n});\n\nexport default updateTime;\n","const resetTime = subject => ({\n  type: subject,\n  payload: '',\n});\n\nexport default resetTime;\n","const increaseTime = (timeStr, subject, lowBorder, highBorder, step) => {\n  let time = Number(timeStr);\n\n  if (time < highBorder && time >= lowBorder) {\n    time += step;\n  } else {\n    time = lowBorder;\n  }\n\n  time = time.toString();\n\n  if (time < 10) {\n    time = `0${time}`;\n  }\n\n  return {\n    type: subject,\n    payload: time,\n  };\n};\n\nexport default increaseTime;\n","const decreaseTime = (timeStr, subject, lowBorder, step) => {\n  let time = Number(timeStr);\n\n  if (time >= lowBorder) {\n    time -= step;\n  }\n\n  time = time.toString();\n\n  if (time < 10) {\n    time = `0${time}`;\n  }\n\n  return {\n    type: subject,\n    payload: time,\n  };\n};\n\nexport default decreaseTime;\n","import { TIME_ERROR } from '../../consts/errorReducer';\n\nconst allFieldsToNumber = (obj) => {\n  const newObj = {};\n\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = Number(obj[key]);\n  });\n\n  return newObj;\n};\n\n\nconst checkForTimeError = (time) => {\n  const {\n    startingHours, endingHours, startingMinutes, endingMinutes,\n  } = allFieldsToNumber(time);\n\n  return {\n    type: TIME_ERROR,\n    isError: startingHours > endingHours || (\n      startingHours === endingHours\n      && startingMinutes > endingMinutes\n    ),\n  };\n};\n\nexport default checkForTimeError;\n","import { LIMIT_ERROR } from '../../consts/errorReducer';\r\n\r\nconst checkForLimitError = (value, lowerLimit) => ({\r\n  type: LIMIT_ERROR,\r\n  isError: Number(value) < lowerLimit,\r\n});\r\n\r\nexport default checkForLimitError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport TimeInput from '../TimeInput';\nimport updateTime from '../../../action-creators/eventsReducer/hoursActions/updateTime';\nimport resetTime from '../../../action-creators/eventsReducer/hoursActions/resetTime';\nimport increaseTime from '../../../action-creators/eventsReducer/hoursActions/increaseTime';\nimport decreaseTime from '../../../action-creators/eventsReducer/hoursActions/decreaseTime';\nimport checkForTimeError from '../../../action-creators/errorReducer/checkForTimeError';\nimport checkForLimitError from '../../../action-creators/errorReducer/checkForLimitError';\nimport {\n  UPDATE_STARTING_HOURS,\n  UPDATE_ENDING_HOURS,\n  UPDATE_STARTING_MINUTES,\n  UPDATE_ENDING_MINUTES,\n} from '../../../consts/eventsReducer';\nimport { timeShape } from '../../../intl/shapes';\nimport './TimeSetter.scss';\n\nclass TimeSetter extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    time: timeShape.isRequired,\n    increaseTime: PropTypes.func.isRequired,\n    decreaseTime: PropTypes.func.isRequired,\n    updateTime: PropTypes.func.isRequired,\n    resetTime: PropTypes.func.isRequired,\n    checkForTimeError: PropTypes.func.isRequired,\n    checkForLimitError: PropTypes.func.isRequired,\n  }\n\n  componentDidUpdate() {\n    const {\n      checkForTimeError,\n      checkForLimitError,\n      time,\n    } = this.props;\n\n    checkForLimitError(time.startingHours, 8);\n    checkForTimeError(time);\n  }\n\n  onChangeTime = (subject, value, maximumValue) => {\n    const inputValue = Number(value);\n    const { updateTime, resetTime } = this.props;\n    const shouldReset = !Number.isNaN(inputValue);\n\n    if (shouldReset) {\n      if (value.length > 2 || inputValue > maximumValue) {\n        resetTime(subject);\n      } else {\n        updateTime(value, subject);\n      }\n    }\n  }\n\n  render() {\n    const\n      {\n        time,\n        increaseTime,\n        decreaseTime,\n        intl: { formatMessage },\n      } = this.props;\n\n    const startLabel = formatMessage({ id: 'meeting.timeSetter.startLabel' });\n    const endLabel = formatMessage({ id: 'meeting.timeSetter.endLabel' });\n\n    return (\n      <div className=\"time-setter\">\n        <TimeInput\n          label={startLabel}\n          className=\"time-setter__input\"\n          hours={time.startingHours}\n          minutes={time.startingMinutes}\n          increaseHours={() => {\n            increaseTime(time.startingHours, UPDATE_STARTING_HOURS, 8, 22, 1);\n          }}\n          increaseMinutes={() => {\n            increaseTime(time.startingMinutes, UPDATE_STARTING_MINUTES, 0, 55, 5);\n          }}\n          decreaseHours={() => {\n            decreaseTime(time.startingHours, UPDATE_STARTING_HOURS, 9, 1);\n          }}\n          decreaseMinutes={() => {\n            decreaseTime(time.startingMinutes, UPDATE_STARTING_MINUTES, 5, 5);\n          }}\n          onHoursChange={(e) => {\n            this.onChangeTime(UPDATE_STARTING_HOURS, e.target.value, 22);\n          }}\n          onMinutesChange={(e) => {\n            this.onChangeTime(UPDATE_STARTING_MINUTES, e.target.value, 59);\n          }}\n        />\n\n        <span className=\"time-setter__space\">‚ñ¨</span>\n\n        <TimeInput\n          label={endLabel}\n          className=\"time-setter__input\"\n          hours={time.endingHours}\n          minutes={time.endingMinutes}\n          increaseHours={() => {\n            increaseTime(time.endingHours, UPDATE_ENDING_HOURS, 8, 22, 1);\n          }}\n          increaseMinutes={() => {\n            increaseTime(time.endingMinutes, UPDATE_ENDING_MINUTES, 0, 55, 5);\n          }}\n          decreaseHours={() => {\n            decreaseTime(time.endingHours, UPDATE_ENDING_HOURS, 9, 1);\n          }}\n          decreaseMinutes={() => {\n            decreaseTime(time.endingMinutes, UPDATE_ENDING_MINUTES, 5, 5);\n          }}\n          onHoursChange={(e) => {\n            this.onChangeTime(UPDATE_ENDING_HOURS, e.target.value, 22);\n          }}\n          onMinutesChange={(e) => {\n            this.onChangeTime(UPDATE_ENDING_MINUTES, e.target.value, 59);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  time: state.eventsReducer.currentEvent.time,\n});\n\nconst mapDispatchToProps = {\n  updateTime,\n  resetTime,\n  increaseTime,\n  decreaseTime,\n  checkForTimeError,\n  checkForLimitError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(TimeSetter));\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { injectIntl, intlShape } from 'react-intl';\r\nimport DateSetterInput from '../DateSetterInput';\r\nimport TimeSetter from '../TimeSetter';\r\nimport './DateAndTime.scss';\r\n\r\nclass DateAndTime extends Component {\r\n  static propTypes = {\r\n    intl: intlShape.isRequired,\r\n    className: PropTypes.string,\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n  }\r\n\r\n  containerStyles = {\r\n    display: 'flex',\r\n  }\r\n\r\n  render() {\r\n    const { className, intl: { formatMessage } } = this.props;\r\n    const dateLabel = formatMessage({ id: 'meeting.timeSetter.dateLabel' });\r\n\r\n    return (\r\n      <div className={`date-and-time ${className}`}>\r\n        <DateSetterInput\r\n          label={dateLabel}\r\n        />\r\n        <TimeSetter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(DateAndTime);\r\n","import React from 'react';\nimport FontAwesomeIcon from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Headline from '../Headline';\nimport Paragraph from '../Paragraph';\nimport { timeShape } from '../../../intl/shapes';\nimport './RoomCard.scss';\n\nconst RoomCard = ({\n  freeTime,\n  roomName,\n  floorNumber,\n  selected,\n  onCardSelect,\n  onCardDeselect,\n  intl: {\n    formatMessage,\n  },\n}) => {\n  const roomInfo = formatMessage({ id: 'roomCard.roomInfo' }, { roomName, floorNumber });\n\n  return (\n    <button\n      className={`room-card ${selected ? 'room-card--selected' : ''}`}\n      onClick={selected ? onCardDeselect : onCardSelect}\n    >\n      <span className=\"room-card__inner\">\n        <Headline className=\"room-card__headline\">\n          {`${freeTime.startingHours}:${freeTime.startingMinutes}`}\n          ‚Äì\n          {`${freeTime.endingHours}:${freeTime.endingMinutes}`}\n        </Headline>\n\n        <Paragraph className=\"room-card__paragraph\">{roomInfo}</Paragraph>\n\n        {selected\n          && (\n          <div>\n            <FontAwesomeIcon\n              name=\"times\"\n              className=\"room-card__close-icon\"\n            />\n          </div>\n          )\n        }\n      </span>\n    </button>\n  );\n};\n\nRoomCard.propTypes = {\n  intl: intlShape.isRequired,\n  freeTime: timeShape.isRequired,\n  roomName: PropTypes.string.isRequired,\n  floorNumber: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  onCardSelect: PropTypes.func,\n  onCardDeselect: PropTypes.func,\n};\n\nexport default injectIntl(RoomCard);\n","import { SET_ROOM } from '../../consts/eventsReducer';\n\nconst setRoom = room => ({\n  type: SET_ROOM,\n  payload: room,\n});\n\nexport default setRoom;\n","import { ROOM_ERROR } from '../../consts/errorReducer';\n\nconst checkForRoomError = room => ({\n  type: ROOM_ERROR,\n  isError: !room,\n});\n\nexport default checkForRoomError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport RoomCard from '../../ui/RoomCard';\nimport Headline from '../../ui/Headline';\nimport triggerSelected from '../../../action-creators/roomsReducer/triggerSelected';\nimport setRoom from '../../../action-creators/eventsReducer/setRoom';\nimport resetRoom from '../../../action-creators/eventsReducer/resetRoom';\nimport checkForRoomError from '../../../action-creators/errorReducer/checkForRoomError';\nimport {\n  usersShape, eventsShape, roomsShape, timeShape, workingTimeShape, dateShape,\n} from '../../../intl/shapes';\nimport HandleErrors from '../HandleErrors';\nimport './RoomCards.scss';\n\nclass RoomCards extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    rooms: roomsShape.isRequired,\n    events: eventsShape.isRequired,\n    roomIsSelected: PropTypes.bool.isRequired,\n    currentEventTime: timeShape.isRequired,\n    currentEventUsers: usersShape.isRequired,\n    roomError: PropTypes.bool.isRequired,\n    checkForRoomError: PropTypes.func.isRequired,\n    resetRoom: PropTypes.func.isRequired,\n    closeTime: workingTimeShape.isRequired,\n    openTime: workingTimeShape.isRequired,\n    triggerSelected: PropTypes.func.isRequired,\n    editing: PropTypes.bool.isRequired,\n    setRoom: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    date: dateShape.isRequired,\n    currentEventId: PropTypes.string,\n  }\n\n  static defaultProps = {\n    className: '',\n  }\n\n  componentDidUpdate() {\n    const { checkForRoomError, roomIsSelected } = this.props;\n\n    checkForRoomError(roomIsSelected);\n  }\n\n  getThisRoomEventsTime = (room) => {\n    const {\n      editing, currentEventId, date, events,\n    } = this.props;\n\n    const deleteNulls = arr => arr.filter(elem => elem !== null);\n\n    const neededEvents = events.filter(event => event.date.startingDate === date.startingDate\n      && event.date.startingMonth === date.startingMonth);\n\n    const freeTime = neededEvents.map((event) => {\n      if (event.room.id === room.id) {\n        if (editing) {\n          return event.id !== currentEventId ? event.time : null;\n        }\n\n        return event.time;\n      }\n\n      return null;\n    });\n\n    return deleteNulls(freeTime);\n  }\n\n  sortEventsByTime = (events) => {\n    if (events.length < 2) {\n      return events;\n    }\n\n    const pivotPosition = Math.floor(Math.random() * events.length);\n    const pivot = events[pivotPosition];\n    const less = events.filter(elem => (\n      elem.endingHours <= pivot.startingHours && elem.endingMinutes <= pivot.startingMinutes\n    ));\n\n    const greater = events.filter(elem => (\n      elem.startingHours >= pivot.endingHours && elem.startingMinutes >= pivot.endingMinutes\n    ));\n\n    return [...this.sortEventsByTime(less), pivot, ...this.sortEventsByTime(greater)];\n  }\n\n  getConditions = (\n    startingHours1,\n    startingMinutes1,\n    startingHours2,\n    startingMinutes2,\n    endingHours1,\n    endingMinutes1,\n    endingHours2,\n    endingMinutes2,\n  ) => {\n    const firstCondition = startingHours1 > endingHours1\n      || (startingHours1 == endingHours1 // eslint-disable-line eqeqeq\n      && startingMinutes1 >= endingMinutes1);\n\n    const secondCondition = startingHours2 > endingHours2\n      || (startingHours2 == endingHours2 // eslint-disable-line eqeqeq\n      && startingMinutes2 >= endingMinutes2);\n\n    return firstCondition && secondCondition;\n  }\n\n  getFreeTime = (room) => {\n    const {\n      currentEventTime,\n      openTime,\n      closeTime,\n    } = this.props;\n\n    const thisRoomEvents = this.getThisRoomEventsTime(room);\n\n    if (thisRoomEvents.length < 1) {\n      return {\n        startingHours: openTime.hours,\n        startingMinutes: openTime.minutes,\n        endingHours: closeTime.hours,\n        endingMinutes: closeTime.minutes,\n      };\n    }\n\n    const sortedTimeArr = this.sortEventsByTime(thisRoomEvents);\n\n    for (let i = 0; i < sortedTimeArr.length; i++) {\n      let startingHours;\n      let startingMinutes;\n      let endingHours;\n      let endingMinutes;\n\n      const isEventFirst = this.getConditions(\n        currentEventTime.startingHours,\n        currentEventTime.startingMinutes,\n        sortedTimeArr[i].startingHours,\n        sortedTimeArr[i].startingMinutes,\n        openTime.hours,\n        openTime.minutes,\n        currentEventTime.endingHours,\n        currentEventTime.endingMinutes,\n      );\n\n      const isEventLast = this.getConditions(\n        currentEventTime.startingHours,\n        currentEventTime.startingMinutes,\n        closeTime.hours,\n        closeTime.minutes,\n        sortedTimeArr[i].endingHours,\n        sortedTimeArr[i].endingMinutes,\n        currentEventTime.endingHours,\n        currentEventTime.endingMinutes,\n      );\n\n      const isEventMidst = sortedTimeArr[i + 1] ? this.getConditions(\n        currentEventTime.startingHours,\n        currentEventTime.startingMinutes,\n        sortedTimeArr[i + 1].startingHours,\n        sortedTimeArr[i + 1].startingMinutes,\n        sortedTimeArr[i].endingHours,\n        sortedTimeArr[i].endingMinutes,\n        currentEventTime.endingHours,\n        currentEventTime.endingMinutes,\n      ) : false;\n\n      if (isEventFirst\n        && !sortedTimeArr[i - 1]\n      ) {\n        startingHours = openTime.hours < 10 ? `0${openTime.hours}` : openTime.hours;\n        startingMinutes = openTime.minutes;\n        endingHours = sortedTimeArr[i].startingHours;\n        endingMinutes = sortedTimeArr[i].startingMinutes;\n      }\n\n      if (isEventLast\n        && !sortedTimeArr[i + 1]\n      ) {\n        startingHours = sortedTimeArr[i].endingHours;\n        startingMinutes = sortedTimeArr[i].endingMinutes;\n        endingHours = closeTime.hours;\n        endingMinutes = closeTime.minutes;\n      }\n\n      if (isEventMidst) {\n        startingHours = sortedTimeArr[i].endingHours;\n        startingMinutes = sortedTimeArr[i].endingMinutes;\n        endingHours = sortedTimeArr[i + 1].startingHours;\n        endingMinutes = sortedTimeArr[i + 1].startingMinutes;\n      }\n\n      if (startingHours !== undefined) { // Without this check, shows undefined time in component.\n        return { // If it fails, nothing renders.\n          startingHours,\n          startingMinutes,\n          endingHours,\n          endingMinutes,\n        };\n      }\n    }\n  }\n\n  renderSelectedRoom = () => {\n    const { rooms, resetRoom, triggerSelected } = this.props;\n\n    const selectedRoom = rooms.find(room => room.selected);\n\n    const freeTime = this.getFreeTime(selectedRoom);\n\n    return (\n      freeTime ? (\n        <RoomCard\n          key={selectedRoom.id}\n          freeTime={freeTime}\n          roomName={selectedRoom.name}\n          floorNumber={selectedRoom.floor}\n          selected={selectedRoom.selected}\n          onCardDeselect={(e) => {\n            e.stopPropagation();\n            triggerSelected(selectedRoom.id);\n            resetRoom();\n          }}\n        />\n      ) : null\n    );\n  }\n\n  getRoomsToRender = () => {\n    const { rooms, currentEventUsers } = this.props;\n\n    const neededRooms = rooms.filter((room) => {\n      const shouldRoomBeRecommended = () => currentEventUsers.length <= room.maxVisitors;\n\n      return shouldRoomBeRecommended ? room : null;\n    });\n\n    if (currentEventUsers.length > 0) {\n      const floors = currentEventUsers.map(user => user.homeFloor);\n\n      const sortRooms = (rooms, compared) => {\n        if (rooms.length < 2) {\n          return rooms;\n        }\n\n        const equalToCompared = rooms.filter(room => room.floor === compared);\n        const greater = rooms.filter(room => room.floor > compared);\n        const less = rooms.filter(room => room.floor < compared);\n\n        return [...equalToCompared, ...less, ...greater];\n      };\n\n      const neededFloor = () => {\n        const sortedFloors = floors.sort();\n        let highestOccurence = sortedFloors[0];\n        let count = 0;\n        let newCount = 1;\n\n        for (let i = 0; i < sortedFloors.length; i++) {\n          if (sortedFloors[i] === highestOccurence) {\n            count++;\n          } else if (sortedFloors[i] === sortedFloors[i + 1]) {\n            newCount++;\n            if (newCount > count) {\n              highestOccurence = sortedFloors[i];\n              count = newCount;\n              newCount = 1;\n            }\n          }\n        }\n\n        return highestOccurence;\n      };\n\n      return sortRooms(neededRooms, neededFloor(floors));\n    }\n\n    return neededRooms;\n  }\n\n  renderRooms = () => {\n    const { setRoom, triggerSelected } = this.props;\n    const roomsToRender = this.getRoomsToRender();\n    let overallRooms = 0;\n\n    return roomsToRender.map((room) => {\n      const freeTime = this.getFreeTime(room);\n\n      if (freeTime && overallRooms < 5) {\n        overallRooms++;\n        return (\n          <RoomCard\n            key={room.id}\n            freeTime={freeTime}\n            roomName={room.name}\n            floorNumber={room.floor}\n            selected={room.selected}\n            onCardSelect={() => {\n              setRoom(room);\n              triggerSelected(room.id);\n            }}\n          />\n        );\n      }\n\n      return null;\n    });\n  }\n\n  render() {\n    const {\n      roomIsSelected, className, roomError, intl: { formatMessage },\n    } = this.props;\n    const selectedHeadline = formatMessage({ id: 'meeting.roomCards.selectedHeadline' });\n    const unselectedHeadline = formatMessage({ id: 'meeting.roomCards.unselectedHeadline' });\n    const errorMessage = formatMessage({ id: 'meeting.roomCards.errorText' });\n\n    return (\n      <section className={`room-cards ${className}`}>\n        <Headline className=\"room-cards__headline\" tabIndex=\"0\">\n          {roomIsSelected ? selectedHeadline : unselectedHeadline}\n        </Headline>\n\n        <HandleErrors\n          message={errorMessage}\n          isError={roomError}\n        />\n\n        <div>\n          {roomIsSelected ? this.renderSelectedRoom() : this.renderRooms()}\n        </div>\n      </section>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  rooms: state.roomsReducer.rooms,\n  roomIsSelected: state.roomsReducer.roomIsSelected,\n  roomError: state.errorReducer.roomError,\n  events: state.eventsReducer.events,\n  currentEventTime: state.eventsReducer.currentEvent.time,\n  currentEventUsers: state.eventsReducer.currentEvent.users,\n  closeTime: state.pageReducer.closeTime,\n  openTime: state.pageReducer.openTime,\n  editing: state.pageReducer.editEventModalOpen,\n  currentEventId: state.eventsReducer.currentEvent.id,\n  date: state.eventsReducer.currentEvent.date,\n});\n\nconst mapDispatchToProps = {\n  triggerSelected,\n  setRoom,\n  resetRoom,\n  checkForRoomError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(RoomCards));\n","import getLocalStorageItems from './getLocalStorageItems';\r\n\r\nconst addLocalStorageEvent = (newEvent, id) => {\r\n  getLocalStorageItems('events')\r\n    .then((events) => {\r\n      localStorage.setItem('events', JSON.stringify([...events, { ...newEvent, id }]));\r\n    });\r\n};\r\n\r\nexport default addLocalStorageEvent;\n","import { time } from 'uniqid';\nimport { ADD_EVENT } from '../../consts/eventsReducer';\nimport { TRIGGER_SUCCESS_MODAL } from '../../consts/pageReducer';\nimport addLocalStorageEvent from '../../db/queries/addLocalStorageEvent';\nimport triggerModal from '../pageReducer/triggerModal';\n\nconst createEventActionCreator = id => ({\n  type: ADD_EVENT,\n  id,\n});\n\nconst createEvent = (event) => {\n  const id = time();\n\n  return (dispatch) => {\n    addLocalStorageEvent(event, id);\n    dispatch(createEventActionCreator(id));\n    dispatch(triggerModal(TRIGGER_SUCCESS_MODAL));\n  };\n};\n\nexport default createEvent;\n","import deleteLocalStorageEvent from './deleteLocalStorageEvent';\r\nimport addLocalStorageEvent from './addLocalStorageEvent';\r\n\r\nconst updateLocalStorageEvent = (event, id) => (\r\n  new Promise((res) => {\r\n    res(deleteLocalStorageEvent(id));\r\n  })\r\n    .then(() => {\r\n      addLocalStorageEvent(event, id);\r\n    })\r\n);\r\n\r\nexport default updateLocalStorageEvent;\n","import updateLocalStorageEvent from '../../db/queries/updateLocalStorageEvent';\r\nimport { EDIT_EVENT } from '../../consts/eventsReducer';\r\n\r\nconst editEventActionCreator = (id, updatedEvent) => ({\r\n  type: EDIT_EVENT,\r\n  id,\r\n  updatedEvent,\r\n});\r\n\r\nconst editEvent = (updatedEvent, id) => (dispatch) => {\r\n  updateLocalStorageEvent(updatedEvent, id);\r\n  dispatch(editEventActionCreator(id, updatedEvent));\r\n};\r\n\r\nexport default editEvent;\n","import { SHOW_ERRORS } from '../../consts/errorReducer';\r\n\r\nconst showAllErrors = () => ({\r\n  type: SHOW_ERRORS,\r\n});\r\n\r\nexport default showAllErrors;\n","import getLocalStorageItems from './getLocalStorageItems';\r\n\r\nconst addUserBusyTime = (updatedUsers, busyTime) => {\r\n  getLocalStorageItems('users')\r\n    .then(users => (\r\n      users.map((user) => {\r\n        const shouldUpdate = updatedUsers.some(updatedUser => (\r\n          updatedUser.id === user.id\r\n        ));\r\n\r\n        if (shouldUpdate) {\r\n          return {\r\n            ...user,\r\n            busyTime: [\r\n              ...user.busyTime,\r\n              busyTime,\r\n            ],\r\n          };\r\n        }\r\n\r\n        return user;\r\n      })\r\n    ))\r\n    .then((newUsers) => {\r\n      localStorage.setItem('users', JSON.stringify(newUsers));\r\n    });\r\n};\r\n\r\nexport default addUserBusyTime;\r\n","import { UPDATE_USER_BUSY_TIME } from '../../consts/usersReducer';\r\nimport addUserBusyTime from '../../db/queries/addUserBusyTime';\r\n\r\nconst updateUserBusyTimeActionCreator = (users, busyTime) => ({\r\n  type: UPDATE_USER_BUSY_TIME,\r\n  payload: {\r\n    users,\r\n    busyTime,\r\n  },\r\n});\r\n\r\nconst updateUserBusyTime = (users, busyTime) => (\r\n  (dispatch) => {\r\n    addUserBusyTime(users, busyTime);\r\n    dispatch(updateUserBusyTimeActionCreator(users, busyTime));\r\n  }\r\n);\r\n\r\nexport default updateUserBusyTime;\r\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { connect } from 'react-redux';\nimport GreyBtn from '../../ui/GreyBtn';\nimport SubmitBtn from '../../ui/SubmitBtn';\nimport createEvent from '../../../action-creators/eventsReducer/createEvent';\nimport editEvent from '../../../action-creators/eventsReducer/editEvent';\nimport triggerModal from '../../../action-creators/pageReducer/triggerModal';\nimport {\n  TRIGGER_CREATE_MODAL,\n  TRIGGER_EDIT_MODAL,\n} from '../../../consts/pageReducer';\nimport resetValues from '../../../action-creators/eventsReducer/resetValues';\nimport { eventShape } from '../../../intl/shapes';\nimport showAllErrors from '../../../action-creators/errorReducer/showAllErrors';\nimport updateUserBusyTime from '../../../action-creators/usersReducer/updateUserBusyTime';\nimport './BottomBtns.scss';\n\nclass BottomBtns extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    edit: PropTypes.bool.isRequired,\n    currentEvent: eventShape.isRequired,\n    createEvent: PropTypes.func.isRequired,\n    editEvent: PropTypes.func.isRequired,\n    triggerModal: PropTypes.func.isRequired,\n    nameError: PropTypes.bool.isRequired,\n    parti—ÅipantsError: PropTypes.bool.isRequired,\n    roomError: PropTypes.bool.isRequired,\n    capacityError: PropTypes.bool.isRequired,\n    timeError: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number, // 1 or 0\n    ]).isRequired,\n    showAllErrors: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    resetValues: PropTypes.func.isRequired,\n    breakpoint: PropTypes.number.isRequired,\n    updateUserBusyTime: PropTypes.func.isRequired,\n  }\n\n  checkForErrors = () => {\n    const {\n      nameError,\n      parti—ÅipantsError,\n      roomError,\n      capacityError,\n      timeError,\n    } = this.props;\n\n    return nameError || parti—ÅipantsError || roomError || capacityError || timeError;\n  }\n\n  handleCreate = () => {\n    const {\n      createEvent, triggerModal, showAllErrors, currentEvent, updateUserBusyTime,\n    } = this.props;\n\n    const isErrors = this.checkForErrors();\n    if (!isErrors) {\n      createEvent(currentEvent);\n      updateUserBusyTime(currentEvent.users, currentEvent.time);\n      triggerModal(TRIGGER_CREATE_MODAL);\n    } else {\n      showAllErrors();\n    }\n  }\n\n  handleEdit = () => {\n    const {\n      editEvent, triggerModal, currentEvent, showAllErrors, resetValues,\n    } = this.props;\n\n    const isErrors = this.checkForErrors();\n\n    if (!isErrors) {\n      editEvent(currentEvent, currentEvent.id);\n      triggerModal(TRIGGER_EDIT_MODAL);\n      updateUserBusyTime(currentEvent.users, currentEvent.time);\n      resetValues();\n    } else {\n      showAllErrors();\n    }\n  }\n\n  render() {\n    const {\n      onCancel, onDelete, edit, intl: { formatMessage }, breakpoint,\n    } = this.props;\n    const cancelBtnText = formatMessage({ id: 'meeting.bottomBtns.cancelBtnText' });\n    const deleteBtnText = formatMessage({ id: 'meeting.bottomBtns.deleteBtnText' });\n    const saveBtnText = formatMessage({ id: 'meeting.bottomBtns.saveBtnText' });\n    const createBtnText = formatMessage({ id: 'meeting.bottomBtns.createBtnText' });\n\n    return (\n      <div className=\"bottom-btns\">\n        <GreyBtn onClick={onCancel}>\n          {cancelBtnText}\n        </GreyBtn>\n\n        {edit\n          ? (\n            <Fragment>\n              {window.innerWidth > breakpoint\n                && (\n                  <GreyBtn\n                    onClick={onDelete}\n                    className=\"bottom-btns__delete-btn\"\n                  >\n                    {deleteBtnText}\n                  </GreyBtn>\n                )\n              }\n\n              <SubmitBtn\n                text={saveBtnText}\n                onClick={this.handleEdit}\n                className=\"bottom-btns__save-btn\"\n              />\n            </Fragment>\n          )\n\n          : (\n            <SubmitBtn\n              text={createBtnText}\n              onClick={this.handleCreate}\n              className=\"bottom-btns__submit-btn\"\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  breakpoint: state.pageReducer.mobileBreakpoint,\n  currentEvent: state.eventsReducer.currentEvent,\n  nameError: state.errorReducer.nameError,\n  parti—ÅipantsError: state.errorReducer.parti—ÅipantsError,\n  roomError: state.errorReducer.roomError,\n  capacityError: state.errorReducer.capacityError,\n  timeError: state.errorReducer.timeError,\n});\n\nconst mapDispatchToProps = {\n  createEvent,\n  editEvent,\n  triggerModal,\n  resetValues,\n  showAllErrors,\n  updateUserBusyTime,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BottomBtns));\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './DeleteBtn.scss';\r\n\r\nexport default class DeleteBtn extends Component {\r\n  static propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n  }\r\n\r\n  static defaultProps = {\r\n    className: '',\r\n  }\r\n\r\n  mobileDeleteBtnStyles = {\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n    color: '#ff3333',\r\n    textAlign: 'center',\r\n    height: '60px',\r\n    fontFamily: 'TextBook, sans-serif',\r\n    fontWeight: 'normal',\r\n    fontSize: '17px',\r\n    cursor: 'pointer',\r\n    border: 'none',\r\n    transition: '.15s ease-in-out',\r\n    outline: 'none',\r\n    ':focus,:active': {\r\n      color: '#f00',\r\n    },\r\n  }\r\n\r\n  render() {\r\n    const { text, onClick, className } = this.props;\r\n\r\n    return (\r\n      <button className={`delete-btn ${className}`} onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { CHANGE_EVENT_NAME } from '../../consts/eventsReducer';\n\nconst setEventName = value => ({\n  type: CHANGE_EVENT_NAME,\n  payload: value,\n});\n\nexport default setEventName;\n","import { NAME_ERROR } from '../../consts/errorReducer';\n\nconst checkForNameError = name => ({\n  type: NAME_ERROR,\n  isError: !name,\n});\n\nexport default checkForNameError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Input from '../../ui/Input';\nimport setEventName from '../../../action-creators/eventsReducer/setEventName';\nimport checkForNameError from '../../../action-creators/errorReducer/checkForNameError';\nimport HandleErrors from '../HandleErrors';\nimport addLabel from '../../HOC/addLabel';\n\nclass EventNameSetter extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    setEventName: PropTypes.func.isRequired,\n    eventName: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    nameError: PropTypes.bool.isRequired,\n    checkForNameError: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    placeholder: '',\n  }\n\n  componentDidUpdate() {\n    const { checkForNameError, eventName } = this.props;\n\n    checkForNameError(eventName);\n  }\n\n  handleChange = (e) => {\n    const { setEventName } = this.props;\n\n    setEventName(e.target.value);\n  }\n\n  render() {\n    const {\n      eventName,\n      nameError,\n      intl: { formatMessage },\n      isAllErrorsShown,\n      setEventName,\n      checkForNameError,\n      ...otherProps\n    } = this.props;\n    const errorText = formatMessage({ id: 'meeting.eventNameSetter.errorText' });\n\n    return (\n      <div>\n        <HandleErrors\n          message={errorText}\n          isError={nameError}\n        />\n\n        <Input\n          value={eventName}\n          isError={nameError && isAllErrorsShown}\n          onChange={this.handleChange}\n          {...otherProps}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  eventName: state.eventsReducer.currentEvent.name,\n  nameError: state.errorReducer.nameError,\n  isAllErrorsShown: state.errorReducer.isAllErrorsShown,\n});\n\nconst mapDispatchToProps = {\n  setEventName,\n  checkForNameError,\n};\n\nconst ConnectedComponent = connect(\n  mapStateToProps, mapDispatchToProps,\n)(injectIntl(EventNameSetter));\n\nexport default addLabel(ConnectedComponent);\n","import React from 'react';\nimport FontAwesomeIcon from 'react-fontawesome';\nimport { injectIntl } from 'react-intl';\nimport RoundBtn from '../RoundBtn';\n\nexport default injectIntl((props) => {\n  const { intl: { formatMessage }, ...otherProps } = props;\n  const label = formatMessage({ id: 'closeBtnAriaLabel' });\n\n  return (\n    <RoundBtn {...otherProps} aria-label={label}>\n      <FontAwesomeIcon\n        name=\"times\"\n      />\n    </RoundBtn>\n  );\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FocusTrap from 'react-focus-trap';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Dropdown from '../Dropdown';\nimport LargeHeadline from '../../ui/LargeHeadline';\nimport DateAndTime from '../DateAndTime';\nimport RoomCards from '../RoomCards';\nimport BottomBtns from '../BottomBtns';\nimport DeleteBtn from '../../ui/DeleteBtn';\nimport resetValues from '../../../action-creators/eventsReducer/resetValues';\nimport triggerModal from '../../../action-creators/pageReducer/triggerModal';\nimport {\n  TRIGGER_CREATE_MODAL,\n  TRIGGER_EDIT_MODAL,\n  TRIGGER_DELETE_MODAL,\n} from '../../../consts/pageReducer';\nimport EventNameSetter from '../EventNameSetter';\nimport CloseBtn from '../../ui/CloseBtn';\nimport './Meeting.scss';\n\nclass Meeting extends Component {\n  static propTypes = {\n    intl: intlShape.isRequired,\n    triggerModal: PropTypes.func.isRequired,\n    edit: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    resetValues: PropTypes.func.isRequired,\n    breakpoint: PropTypes.number.isRequired,\n  }\n\n  closeModal = () => {\n    const { edit, triggerModal, resetValues } = this.props;\n\n    if (edit) {\n      triggerModal(TRIGGER_EDIT_MODAL);\n      resetValues();\n    } else {\n      triggerModal(TRIGGER_CREATE_MODAL);\n    }\n  }\n\n  handleDelete = () => {\n    const { triggerModal } = this.props;\n\n    triggerModal(TRIGGER_DELETE_MODAL);\n  }\n\n  render() {\n    const {\n      title, edit, intl: { formatMessage }, breakpoint,\n    } = this.props;\n    const nameSetterPlaceholder = formatMessage({ id: 'meeting.eventNameSetter.placeholder' });\n    const nameSetterLabel = formatMessage({ id: 'meeting.eventNameSetter.label' });\n    const dropdownPlaceholder = formatMessage({ id: 'meeting.dropdown.placeholder' });\n    const dropdownLabel = formatMessage({ id: 'meeting.dropdown.label' });\n    const deleteBtnText = formatMessage({ id: 'meeting.edit.deleteBtnText' });\n\n    return (\n      <FocusTrap>\n        <section className=\"meeting\">\n          <div className=\"meeting__inner\">\n            <div className=\"meeting-section\">\n              <LargeHeadline className=\"meeting__headline\">{title}</LargeHeadline>\n            </div>\n\n            <div className=\"meeting-section\">\n              <EventNameSetter\n                label={nameSetterLabel}\n                placeholder={nameSetterPlaceholder}\n                className=\"meeting-section__subsection\"\n              />\n\n              <DateAndTime className=\"meeting-section__subsection\" />\n\n              <CloseBtn className=\"meeting__close-btn\" onClick={this.closeModal} />\n            </div>\n\n            <div className=\"meeting-section\">\n              <Dropdown\n                label={dropdownLabel}\n                placeholder={dropdownPlaceholder}\n                className=\"meeting-section__subsection\"\n              />\n\n              <RoomCards\n                className=\"meeting-section__subsection\"\n              />\n            </div>\n\n            {window.innerWidth <= breakpoint && edit\n              && (\n                <DeleteBtn\n                  text={deleteBtnText}\n                  onClick={this.handleDelete}\n                  className=\"meeting__delete-btn\"\n                />\n              )\n            }\n          </div>\n\n          <BottomBtns\n            onCancel={this.closeModal}\n            onDelete={this.handleDelete}\n            edit={edit}\n          />\n\n        </section>\n      </FocusTrap>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  edit: state.pageReducer.editEventModalOpen,\n  breakpoint: state.pageReducer.mobileBreakpoint,\n});\n\nconst mapDispatchToProps = {\n  triggerModal,\n  resetValues,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Meeting));\n"],"sourceRoot":""}